describe('expressions', function() {

  it('expression unary 1', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","with":null,"from":[{"type":"identifier","variant":"table","name":"hats","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"expression","format":"unary","variant":"operation","expression":{"type":"identifier","variant":"column","name":"bees"},"operator":"not","alias":"b"}],"distinct":false,"all":false,"order":null,"limit":null}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression table 1', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","from":{"type":"map","variant":"join","source":{"type":"identifier","variant":"table","name":"inventory","alias":null,"index":null},"map":[{"type":"join","variant":"inner join","source":{"type":"identifier","variant":"table","name":"ham","alias":null,"index":null},"constraint":{"type":"constraint","variant":"join","format":"on","on":{"type":"expression","format":"binary","variant":"operation","operation":"=","left":{"type":"identifier","variant":"column","name":"inventory.variety"},"right":{"type":"identifier","variant":"column","name":"ham.type"}}}}]},"where":null,"group":null,"result":[{"type":"identifier","variant":"star","name":"*"}],"distinct":false,"all":false,"order":null,"limit":null,"with":[{"type":"expression","format":"table","variant":"common","target":{"type":"identifier","variant":"table","name":"ham"},"expression":{"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"hams","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"identifier","variant":"column","name":"type","alias":null}],"distinct":false,"all":false,"order":null,"limit":null}}]}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression like', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","with":null,"from":[{"type":"identifier","variant":"table","name":"hats","alias":null,"index":null}],"where":[{"type":"expression","format":"binary","variant":"operation","operation":"like","left":{"type":"identifier","variant":"column","name":"bees"},"right":{"type":"literal","variant":"string","value":"%somebees%"}}],"group":null,"result":[{"type":"identifier","variant":"star","name":"*"}],"distinct":false,"all":false,"order":null,"limit":null}]}';
    tree.equals(resultTree, this, done);
  });

  it('binary case', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"bees","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"expression","format":"binary","variant":"case","expression":null,"condition":[{"type":"condition","format":"when","when":{"type":"expression","format":"binary","variant":"operation","operation":"=","left":{"type":"identifier","variant":"column","name":"bee"},"right":{"type":"literal","variant":"string","value":"red"}},"then":{"type":"literal","variant":"string","value":"ANGRY"}},{"type":"condition","format":"when","when":{"type":"expression","format":"binary","variant":"operation","operation":"=","left":{"type":"identifier","variant":"column","name":"bee"},"right":{"type":"literal","variant":"string","value":"green"}},"then":{"type":"literal","variant":"string","value":"HAPPY"}},{"type":"condition","format":"else","else":{"type":"literal","variant":"string","value":"NEUTRAL"}}],"alias":"beestate"}],"distinct":false,"all":false,"order":null,"limit":null,"with":null}]}';
    tree.equals(resultTree, this, done);
  });

  it('binary cast', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","with":null,"from":[{"type":"identifier","variant":"table","name":"bees","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"expression","format":"unary","variant":"cast","expression":{"type":"literal","variant":"decimal","value":"430.120"},"as":{"type":"datatype","variant":"varchar","affinity":"text","args":[{"type":"literal","variant":"decimal","value":"20"}]},"alias":null}],"distinct":false,"all":false,"order":null,"limit":null}]}';
    tree.equals(resultTree, this, done);
  });

  it('binary concatenation', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","with":null,"from":[{"type":"identifier","variant":"table","name":"bananas","alias":null,"index":null}],"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"binary","variant":"operation","operation":"!=","left":{"type":"literal","variant":"decimal","value":"1"},"right":{"type":"literal","variant":"decimal","value":"2"}},"right":{"type":"expression","format":"binary","variant":"operation","operation":"or","left":{"type":"expression","format":"binary","variant":"operation","operation":"!=","left":{"type":"identifier","variant":"column","name":"color"},"right":{"type":"literal","variant":"string","value":"blue"}},"right":{"type":"expression","format":"binary","variant":"operation","operation":"==","left":{"type":"identifier","variant":"column","name":"pees"},"right":{"type":"identifier","variant":"column","name":"crackers"}}}}],"group":null,"result":[{"type":"identifier","variant":"star","name":"*"}],"distinct":false,"all":false,"order":null,"limit":null}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression grouping 1', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"create","format":"index","target":{"type":"identifier","variant":"index","name":"bees.hive_state"},"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"binary","variant":"operation","operation":"!=","left":{"type":"identifier","variant":"column","name":"anger"},"right":{"type":"literal","variant":"null","value":"null"}},"right":{"type":"expression","format":"unary","variant":"operation","expression":{"type":"identifier","variant":"column","name":"happiness"},"operator":"not"}}],"on":{"target":"hive","columns":[{"type":"identifier","variant":"column","format":"indexed","direction":"asc","name":"happiness","collate":null},{"type":"identifier","variant":"column","format":"indexed","direction":"desc","name":"anger","collate":null}]},"condition":[],"unique":false}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression grouping 2', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"create","format":"index","target":{"type":"identifier","variant":"index","name":"bees.hive_state"},"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"unary","variant":"operation","expression":{"type":"identifier","variant":"column","name":"happiness"},"operation":"not null"},"right":{"type":"expression","format":"binary","variant":"operation","operation":">","left":{"type":"identifier","variant":"column","name":"anger"},"right":{"type":"literal","variant":"decimal","value":"0"}}}],"on":{"target":"hive","columns":[{"type":"identifier","variant":"column","format":"indexed","direction":"asc","name":"happiness","collate":null},{"type":"identifier","variant":"column","format":"indexed","direction":"desc","name":"anger","collate":null}]},"condition":[],"unique":false}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression grouping 3', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"create","format":"index","target":{"type":"identifier","variant":"index","name":"bees.hive_state"},"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"binary","variant":"operation","operation":"is not","left":{"type":"identifier","variant":"column","name":"happiness"},"right":{"type":"literal","variant":"null","value":"null"}},"right":{"type":"expression","format":"binary","variant":"operation","operation":">","left":{"type":"identifier","variant":"column","name":"anger"},"right":{"type":"literal","variant":"decimal","value":"0"}}}],"on":{"target":"hive","columns":[{"type":"identifier","variant":"column","format":"indexed","direction":"asc","name":"happiness","collate":null},{"type":"identifier","variant":"column","format":"indexed","direction":"desc","name":"anger","collate":null}]},"condition":[],"unique":false}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression grouping 4', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"create","format":"index","target":{"type":"identifier","variant":"index","name":"bees.hive_state"},"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"unary","variant":"operation","expression":{"type":"identifier","variant":"column","name":"happiness"},"operation":"is null"},"right":{"type":"expression","format":"binary","variant":"operation","operation":">","left":{"type":"identifier","variant":"column","name":"anger"},"right":{"type":"literal","variant":"decimal","value":"0"}}}],"on":{"target":"hive","columns":[{"type":"identifier","variant":"column","format":"indexed","direction":"asc","name":"happiness","collate":null},{"type":"identifier","variant":"column","format":"indexed","direction":"desc","name":"anger","collate":null}]},"condition":[],"unique":false}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression grouping 5', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"create","format":"index","target":{"type":"identifier","variant":"index","name":"bees.hive_state"},"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"binary","variant":"operation","operation":">","left":{"type":"identifier","variant":"column","name":"anger"},"right":{"type":"literal","variant":"decimal","value":"0"}},"right":{"type":"expression","format":"binary","variant":"operation","operation":"is not","left":{"type":"identifier","variant":"column","name":"happiness"},"right":{"type":"literal","variant":"null","value":"null"}}}],"on":{"target":"hive","columns":[{"type":"identifier","variant":"column","format":"indexed","direction":"asc","name":"happiness","collate":null},{"type":"identifier","variant":"column","format":"indexed","direction":"desc","name":"anger","collate":null}]},"condition":[],"unique":false}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression grouping 6', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"create","format":"index","target":{"type":"identifier","variant":"index","name":"bees.hive_state"},"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"unary","variant":"operation","expression":{"type":"identifier","variant":"column","name":"happiness"},"operator":"not"},"right":{"type":"expression","format":"binary","variant":"operation","operation":">","left":{"type":"identifier","variant":"column","name":"anger"},"right":{"type":"literal","variant":"decimal","value":"0"}}}],"on":{"target":"hive","columns":[{"type":"identifier","variant":"column","format":"indexed","direction":"asc","name":"happiness","collate":null},{"type":"identifier","variant":"column","format":"indexed","direction":"desc","name":"anger","collate":null}]},"condition":[],"unique":false}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression grouping 7', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"create","format":"index","target":{"type":"identifier","variant":"index","name":"bees.hive_state"},"where":[{"type":"expression","format":"binary","variant":"operation","operation":"or","left":{"type":"expression","format":"unary","variant":"operation","expression":{"type":"identifier","variant":"column","name":"happiness"},"operator":"not"},"right":{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"unary","variant":"operation","expression":{"type":"identifier","variant":"column","name":"ANGER"},"operator":"~"},"right":{"type":"expression","format":"binary","variant":"operation","operation":"is not","left":{"type":"identifier","variant":"column","name":"anger"},"right":{"type":"literal","variant":"decimal","value":"0"}}}}],"on":{"target":"hive","columns":[{"type":"identifier","variant":"column","format":"indexed","direction":"asc","name":"happiness","collate":null},{"type":"identifier","variant":"column","format":"indexed","direction":"desc","name":"anger","collate":null}]},"condition":[],"unique":false}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression parenthesis 1', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","with":null,"from":[{"type":"identifier","variant":"table","name":"hats","alias":null,"index":null}],"where":[{"type":"expression","format":"binary","variant":"operation","operation":"or","left":{"type":"identifier","variant":"column","name":"hat"},"right":{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"identifier","variant":"column","name":"shirt"},"right":{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"binary","variant":"operation","operation":"or","left":{"type":"identifier","variant":"column","name":"shoes"},"right":{"type":"identifier","variant":"column","name":"wig"}},"right":{"type":"identifier","variant":"column","name":"pants"}}}}],"group":null,"result":[{"type":"identifier","variant":"star","name":"*"}],"distinct":false,"all":false,"order":null,"limit":null}]}';
    tree.equals(resultTree, this, done);
  });

  it('expression parenthesis 2', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","with":null,"from":[{"type":"identifier","variant":"table","name":"hats","alias":null,"index":null}],"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"binary","variant":"operation","operation":"or","left":{"type":"expression","format":"binary","variant":"operation","operation":"!=","left":{"type":"literal","variant":"decimal","value":"1"},"right":{"type":"literal","variant":"decimal","value":"2"}},"right":{"type":"expression","format":"binary","variant":"operation","operation":"!=","left":{"type":"literal","variant":"decimal","value":"3"},"right":{"type":"literal","variant":"decimal","value":"4"}}},"right":{"type":"expression","format":"binary","variant":"operation","operation":"==","left":{"type":"literal","variant":"decimal","value":"3"},"right":{"type":"literal","variant":"decimal","value":"3"}}}],"group":null,"result":[{"type":"identifier","variant":"star","name":"*"}],"distinct":false,"all":false,"order":null,"limit":null}]}';
    tree.equals(resultTree, this, done);
  });

  it('with table expression 1', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"nick","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"identifier","variant":"star","name":"*"}],"distinct":false,"all":false,"order":null,"limit":null,"with":[{"type":"expression","format":"table","variant":"recursive","target":{"type":"identifier","variant":"expression","format":"table","name":"hat","columns":[{"type":"identifier","variant":"column","name":"hat"},{"type":"identifier","variant":"column","name":"pants"}]},"expression":{"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"hats","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"identifier","variant":"star","name":"*"}],"distinct":false,"all":false,"order":null,"limit":null}},{"type":"expression","format":"table","variant":"recursive","target":{"type":"identifier","variant":"table","name":"pant"},"expression":{"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"pants","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"identifier","variant":"star","name":"*"}],"distinct":false,"all":false,"order":null,"limit":null}},{"type":"expression","format":"table","variant":"recursive","target":{"type":"identifier","variant":"expression","format":"table","name":"nap","columns":[{"type":"identifier","variant":"column","name":"a"}]},"expression":{"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"naps","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"identifier","variant":"column","name":"sleep","alias":null}],"distinct":false,"all":false,"order":null,"limit":null}}]}]}';
    tree.equals(resultTree, this, done);
  });

  it('with table expression 2', function(done) {
    var resultTree = '{"statement":[{"explain":false,"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"ancestor_of_alice","alias":null,"index":null},{"type":"identifier","variant":"table","name":"family","alias":null,"index":null}],"where":[{"type":"expression","format":"binary","variant":"operation","operation":"and","left":{"type":"expression","format":"binary","variant":"operation","operation":"=","left":{"type":"identifier","variant":"column","name":"ancestor_of_alice.name"},"right":{"type":"identifier","variant":"column","name":"family.name"}},"right":{"type":"expression","format":"binary","variant":"operation","operation":"is","left":{"type":"identifier","variant":"column","name":"died"},"right":{"type":"literal","variant":"null","value":"null"}}}],"group":null,"result":[{"type":"identifier","variant":"column","name":"family.name","alias":null}],"distinct":false,"all":false,"order":[{"direction":"","expression":{"type":"identifier","variant":"column","name":"born"},"collate":null}],"limit":null,"with":[{"type":"expression","format":"table","variant":"recursive","target":{"type":"identifier","variant":"expression","format":"table","name":"parent_of","columns":[{"type":"identifier","variant":"column","name":"name"},{"type":"identifier","variant":"column","name":"parent"}]},"expression":{"type":"statement","variant":"compound","statement":{"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"family","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"identifier","variant":"column","name":"name","alias":null},{"type":"identifier","variant":"column","name":"mom","alias":null}],"distinct":false,"all":false},"compound":[{"type":"compound","variant":"union","statement":{"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"family","alias":null,"index":null}],"where":null,"group":null,"result":[{"type":"identifier","variant":"column","name":"name","alias":null},{"type":"identifier","variant":"column","name":"dad","alias":null}],"distinct":false,"all":false}}],"order":null,"limit":null}},{"type":"expression","format":"table","variant":"recursive","target":{"type":"identifier","variant":"expression","format":"table","name":"ancestor_of_alice","columns":[{"type":"identifier","variant":"column","name":"name"}]},"expression":{"type":"statement","variant":"compound","statement":{"type":"statement","variant":"select","from":[{"type":"identifier","variant":"table","name":"parent_of","alias":null,"index":null}],"where":[{"type":"expression","format":"binary","variant":"operation","operation":"=","left":{"type":"identifier","variant":"column","name":"name"},"right":{"type":"literal","variant":"string","value":"Alice"}}],"group":null,"result":[{"type":"identifier","variant":"column","name":"parent","alias":null}],"distinct":false,"all":false},"compound":[{"type":"compound","variant":"union all","statement":{"type":"statement","variant":"select","from":{"type":"map","variant":"join","source":{"type":"identifier","variant":"table","name":"parent_of","alias":null,"index":null},"map":[{"type":"join","variant":"join","source":{"type":"identifier","variant":"table","name":"ancestor_of_alice","alias":null,"index":null},"constraint":{"type":"constraint","variant":"join","format":"using","using":{"columns":[{"type":"identifier","variant":"column","name":"name"}]}}}]},"where":null,"group":null,"result":[{"type":"identifier","variant":"column","name":"parent","alias":null}],"distinct":false,"all":false}}],"order":null,"limit":null}}]}]}';
    tree.equals(resultTree, this, done);
  });

});
