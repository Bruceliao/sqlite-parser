/*!
 * sqlite-parser - v0.14.3
 * @copyright 2015-2016 Code School (http://codeschool.com)
 * @author Nick Wronski <nick@javascript.com>
 */
!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.sqliteParser=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";function d(a){return a&&a.__esModule?a:{default:a}}function sqliteParser(a,b){var c=(0,i.default)(),d=(0,g.isFunc)(b),e={tracer:c};if(d)return void setTimeout(function(){try{b(null,(0,f.default)(a,e))}catch(a){b(c.smartError(a))}},0);try{return(0,f.default)(a,e)}catch(a){throw c.smartError(a)}}Object.defineProperty(c,"__esModule",{value:!0}),c.default=sqliteParser;var e=a("./lib/parser"),f=d(e),g=a("./lib/parser-util"),h=a("./lib/tracer"),i=d(h);sqliteParser.NAME="sqlite-parser",sqliteParser.VERSION="0.14.3",b.exports=c.default},{"./lib/parser":3,"./lib/parser-util":2,"./lib/tracer":4}],2:[function(a,b,c){"use strict";function d(a){return k(a)?a:l(a)?[a]:[]}function e(a){return Object.prototype.toString.call(a)}function f(a){return"[object Object]"===e(a)}function g(a){return"[object RegExp]"===e(a)}function h(a){return"[object Function]"===e(a)}function j(a){return"[object String]"===e(a)}function k(a){return Array.isArray?Array.isArray(a):"[object Array]"===e(a)}function l(a){return null!=a}function m(a){var b,c,d,e,f,g;if(k(a)&&a.length){for(e={},b=0,c=a.length;c>b;b++)f=a[b],d=f.name,g=f.value,e[d]=g;return e}return{}}function n(a,b){var c,d=k(b),e=d?[]:"";return l(b)||(b=" "),c=a.reduce(function(a,c){return d?l(c)?a.concat(c):a:a+(l(c)?o(c)+b:"")},e),d?c:r(c)}function o(a){return q(k(a)?a.join(""):a)}function p(a){return k(a)?a.map(function(a){return a[1]}):[]}function q(a){var b=k(a)||j(a)?a:[];return k(b)&&(b.length&&k(b[0])&&(b=p(b)),b=b.join("")),b}function r(a){return q(a).trim()}function s(){return n.call(this,E.call(arguments,0),"")}function t(a,b){var c;return null==b&&(b="'"),c=new RegExp(b+"{2}","g"),q(a).replace(c,b)}function u(){var a=arguments[0],b=E.call(arguments,1);return b.forEach(function(b){if(l(b)&&f(b)){var c;for(c in b)b.hasOwnProperty(c)&&(a[c]=b[c])}}),a}function v(a,b){var c,d,e;if(k(a))return j(b)?-1!==a.indexOf(b):void 0!==w(a,b);if(f(a)){if(h(b))return b(a);if(f(b)){for(c in b)if(d=b[c],!a.hasOwnProperty(c)||a[c]!==d)return!1;return!0}if(k(b)){for(i=0,e=b.length;i<e;i++)if(c=b[i],!a.hasOwnProperty(c))return!1;return!0}return a.hasOwnProperty(b)}return!1}function w(a,b){var c,d,e;for(c=0,d=a.length;d>c;c++)if(e=a[c],v(e,b))return e;return null}function x(a){return r(a).toLowerCase()}function y(a,b){return x(n(a,b))}function z(){return n.call(this,E.call(arguments,0),[])}function A(a,b){return B(a,b,!0)}function B(a,b,c){var d,e;for(e=a.length-1;e>=0;e+=-1)if(d=a[e],v(d,b))return c?e:d;return c?-1:null}function C(a,b){var c,d,e;for(d=0,e=a.length;e>d&&(c=a[d],b(c));d++);return a.slice(0,d)}function D(a){return k(a)?a.length>0&&l(a[0]):!1}Object.defineProperty(c,"__esModule",{value:!0}),c.makeArray=d,c.typed=e,c.isPlain=f,c.isPattern=g,c.isFunc=h,c.isString=j,c.isArray=k,c.isOkay=l,c.collapse=m,c.compose=n,c.textCompose=o,c.stack=p,c.nodeToString=q,c.textNode=r,c.textMerge=s,c.unescape=t,c.extend=u,c.has=v,c.findWhere=w,c.key=x,c.keyify=y,c.listify=z,c.findLastIndex=A,c.findLast=B,c.takeWhile=C,c.isArrayOkay=D;var E=[].slice},{}],3:[function(a,b,c){"use strict";function d(a){if(a&&a.__esModule)return a;var b={};if(null!=a)for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&(b[c]=a[c]);return b.default=a,b}Object.defineProperty(c,"__esModule",{value:!0});var e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol?"symbol":typeof a},f=a("./parser-util"),g=d(f),h=function(){function a(a,b){function c(){this.constructor=a}c.prototype=b.prototype,a.prototype=new c}function b(a,c,d){this.message=a,this.expected=c,this.location=d,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,b)}function c(){this.indentLevel=0}function d(a){function d(b){var c,d=t[b];if(d)return d;for(c=b-1;!t[c];)c--;for(d=t[c],d={line:d.line,column:d.column};b>c;)10===a.charCodeAt(c)?(d.line++,d.column=1):d.column++,c++;return t[b]=d,d}function e(a,b){var c=d(a),e=d(b);return{start:{offset:a,line:c.line,column:c.column},end:{offset:b,line:e.line,column:e.column}}}function f(a){u>r||(r>u&&(u=r,v=[]),v.push(a))}function h(a,c,d){function e(a){var b,c;if(a.sort(function(a,b){return a.description<b.description?-1:a.description>b.description?1:0}),a.length>0){for(b=1,c=1;b<a.length;b++)a[b-1]!==a[b]&&(a[c]=a[b],c++);a.length=c}}function f(a){var b,c,d=new Array(a.length);for(c=0;c<a.length;c++)d[c]=a[c].description;return b=a.length>1?d.slice(0,-1).join(", ")+" or "+d[a.length-1]:d[0],"Expected "+b+"."}return null!==c&&e(c),new b(null!==a?a:f(c),c,d)}function i(a){var b,c=new Array(a.length);for(b=0;b<a.length;b++)c[b]=a.charCodeAt(b)-32;return c}function j(b){var c,d,g=q[b],h=0,i=[],k=g.length,l=[],n=[],o=r;A.trace({type:"rule.enter",rule:y[b],description:z[b],location:e(o,o)});var t=511*r+b,u=x[t];if(u)return r=u.nextPos,u.result!==m?A.trace({type:"rule.match",rule:y[b],description:z[b],result:u.result,location:e(o,r)}):A.trace({type:"rule.fail",rule:y[b],description:z[b],location:e(o,o)}),u.result;for(;;){for(;k>h;)switch(g[h]){case 0:n.push(p[g[h+1]]),h+=2;break;case 1:n.push(void 0),h++;break;case 2:n.push(null),h++;break;case 3:n.push(m),h++;break;case 4:n.push([]),h++;break;case 5:n.push(r),h++;break;case 6:n.pop(),h++;break;case 7:r=n.pop(),h++;break;case 8:n.length-=g[h+1],h+=2;break;case 9:n.splice(-2,1),h++;break;case 10:n[n.length-2].push(n.pop()),h++;break;case 11:n.push(n.splice(n.length-g[h+1],g[h+1])),h+=2;break;case 12:n.push(a.substring(n.pop(),r)),h++;break;case 13:l.push(k),i.push(h+3+g[h+1]+g[h+2]),n[n.length-1]?(k=h+3+g[h+1],h+=3):(k=h+3+g[h+1]+g[h+2],h+=3+g[h+1]);break;case 14:l.push(k),i.push(h+3+g[h+1]+g[h+2]),n[n.length-1]===m?(k=h+3+g[h+1],h+=3):(k=h+3+g[h+1]+g[h+2],h+=3+g[h+1]);break;case 15:l.push(k),i.push(h+3+g[h+1]+g[h+2]),n[n.length-1]!==m?(k=h+3+g[h+1],h+=3):(k=h+3+g[h+1]+g[h+2],h+=3+g[h+1]);break;case 16:n[n.length-1]!==m?(l.push(k),i.push(h),k=h+2+g[h+1],h+=2):h+=2+g[h+1];break;case 17:l.push(k),i.push(h+3+g[h+1]+g[h+2]),a.length>r?(k=h+3+g[h+1],h+=3):(k=h+3+g[h+1]+g[h+2],h+=3+g[h+1]);break;case 18:l.push(k),i.push(h+4+g[h+2]+g[h+3]),a.substr(r,p[g[h+1]].length)===p[g[h+1]]?(k=h+4+g[h+2],h+=4):(k=h+4+g[h+2]+g[h+3],h+=4+g[h+2]);break;case 19:l.push(k),i.push(h+4+g[h+2]+g[h+3]),a.substr(r,p[g[h+1]].length).toLowerCase()===p[g[h+1]]?(k=h+4+g[h+2],h+=4):(k=h+4+g[h+2]+g[h+3],h+=4+g[h+2]);break;case 20:l.push(k),i.push(h+4+g[h+2]+g[h+3]),p[g[h+1]].test(a.charAt(r))?(k=h+4+g[h+2],h+=4):(k=h+4+g[h+2]+g[h+3],h+=4+g[h+2]);break;case 21:n.push(a.substr(r,g[h+1])),r+=g[h+1],h+=2;break;case 22:n.push(p[g[h+1]]),r+=p[g[h+1]].length,h+=2;break;case 23:n.push(m),0===w&&f(p[g[h+1]]),h+=2;break;case 24:s=n[n.length-1-g[h+1]],h+=2;break;case 25:s=r,h++;break;case 26:for(c=g.slice(h+4,h+4+g[h+3]),d=0;d<g[h+3];d++)c[d]=n[n.length-1-c[d]];n.splice(n.length-g[h+2],g[h+2],p[g[h+1]].apply(null,c)),h+=4+g[h+3];break;case 27:n.push(j(g[h+1])),h+=2;break;case 28:w++,h++;break;case 29:w--,h++;break;default:throw new Error("Invalid opcode: "+g[h]+".")}if(!(l.length>0))break;k=l.pop(),h=i.pop()}return x[t]={nextPos:r,result:n[0]},n[0]!==m?A.trace({type:"rule.match",rule:y[b],description:z[b],result:n[0],location:e(o,r)}):A.trace({type:"rule.fail",rule:y[b],description:z[b],location:e(o,o)}),n[0]}var k,l=arguments.length>1?arguments[1]:{},m={},n={start:0},o=0,p=[function(a){return g.extend({},a)},function(a,b){return{statement:g.listify(a,b)}},function(a){return a},{type:"other",description:"Expression"},function(a){return a},{type:"other",description:"Logical Expression Group"},function(a,b,c){return{type:"expression",format:"binary",variant:"operation",operation:g.key(b),left:a,right:c}},{type:"other",description:"Wrapped Expression"},function(a){return a},{type:"other",description:"Unary Expression"},function(a,b){return{type:"expression",format:"unary",variant:"operation",expression:b,operator:g.key(a)}},{type:"other",description:"CAST Expression"},function(a,b,c){return{type:"expression",format:"unary",variant:g.key(a),expression:b,as:c}},{type:"other",description:"Type Alias"},function(a){return a},{type:"other",description:"EXISTS Expression"},function(a,b){return{type:"expression",format:"unary",variant:"exists",expression:b,operator:g.key(a)}},{type:"other",description:"EXISTS Keyword"},function(a,b){return g.compose([a,b])},{type:"other",description:"CASE Expression"},function(a,b,c,d){return{type:"expression",format:"binary",variant:g.key(a),expression:b,condition:g.listify(c,d)}},{type:"other",description:"WHEN Clause"},function(a,b,c){return{type:"condition",format:g.key(a),when:b,then:c}},{type:"other",description:"ELSE Clause"},function(a,b){return{type:"condition",format:g.key(a),else:b}},{type:"other",description:"RAISE Expression"},function(a,b){return g.extend({type:"expression",format:"unary",variant:g.key(a),expression:b},b)},{type:"other",description:"RAISE Expression Arguments"},function(a){return g.extend({type:"error"},a)},{type:"other",description:"IGNORE Keyword"},function(a){return{action:g.key(a)}},function(a,b){return{action:g.key(a),message:b}},{type:"other",description:"COLLATE Expression"},function(a,b,c){return g.extend(a,{collate:c})},{type:"other",description:"Comparison Expression"},function(a,b,c,d,e){return g.extend({type:"expression",format:"binary",variant:"operation",operation:g.keyify([b,c]),left:a,right:d},e)},{type:"other",description:"ESCAPE Expression"},function(a,b){return{escape:b}},{type:"other",description:"NULL Expression"},function(a,b){return{type:"expression",format:"unary",variant:"operation",expression:a,operation:b}},{type:"other",description:"NULL Keyword"},"is",{type:"literal",value:"IS",description:'"IS"i'},function(a,b){return g.keyify([a,b])},{type:"other",description:"IS Keyword"},function(a){return g.textNode(a)},"not",{type:"literal",value:"NOT",description:'"NOT"i'},function(a){return g.key(a)},{type:"other",description:"BETWEEN Expression"},function(a,b,c,d,e,f){return{type:"expression",format:"binary",variant:"operation",operation:g.keyify([b,c]),left:a,right:{type:"expression",format:"binary",variant:"operation",operation:g.key(e),left:d,right:f}}},{type:"other",description:"IN Expression"},function(a,b,c,d){return{type:"expression",format:"binary",variant:"operation",operation:g.keyify([b,c]),left:a,right:d}},function(a){return a},{type:"other",description:"Type Definition"},function(a,b){return g.extend({type:"datatype",variant:a[0],affinity:a[1],args:[]},b)},{type:"other",description:"Type Definition Arguments"},function(a,b){return{args:g.listify(a,b)}},{type:"other",description:"Null Literal"},function(a){return{type:"literal",variant:"null",value:g.key(a)}},{type:"other",description:"Date Literal"},function(a){return{type:"literal",variant:"date",value:g.key(a)}},{type:"other",description:"String Literal"},function(a){return{type:"literal",variant:"string",value:a}},{type:"other",description:"Single-quoted String Literal"},function(a){return g.unescape(a,"'")},"''",{type:"literal",value:"''",description:"\"''\""},/^[^']/,{type:"class",value:"[^\\']",description:"[^\\']"},{type:"other",description:"Blob Literal"},/^[x]/i,{type:"class",value:"[x]i",description:"[x]i"},function(a){return{type:"literal",variant:"blob",value:a}},{type:"other",description:"Number Sign"},function(a,b){return g.isOkay(a)&&(b.value=g.textMerge(a,b.value)),b},function(a,b){return{type:"literal",variant:"decimal",value:g.textMerge(a,b)}},{type:"other",description:"Decimal Literal"},function(a,b){return g.textMerge(a,b)},function(a,b){return g.textMerge(a,b)},{type:"other",description:"Decimal Literal Exponent"},"e",{type:"literal",value:"E",description:'"E"i'},/^[+\-]/,{type:"class",value:"[\\+\\-]",description:"[\\+\\-]"},function(a,b,c){return g.textMerge(a,b,c)},{type:"other",description:"Hexidecimal Literal"},"0x",{type:"literal",value:"0x",description:'"0x"i'},function(a,b){return{type:"literal",variant:"hexidecimal",value:g.textMerge(a,b)}},/^[0-9a-f]/i,{type:"class",value:"[0-9a-f]i",description:"[0-9a-f]i"},/^[0-9]/,{type:"class",value:"[0-9]",description:"[0-9]"},{type:"other",description:"Bind Parameter"},function(a){return g.extend({type:"variable"},a)},{type:"other",description:"Numbered Bind Parameter"},/^[1-9]/,{type:"class",value:"[1-9]",description:"[1-9]"},function(a,b){return{format:"numbered",name:g.textMerge(a,b)}},{type:"other",description:"Named Bind Parameter"},/^[:@]/,{type:"class",value:"[\\:\\@]",description:"[\\:\\@]"},function(a,b){return{format:"named",name:g.textMerge(a,b)}},{type:"other",description:"TCL Bind Parameter"},"$",{type:"literal",value:"$",description:'"$"'},":",{type:"literal",value:":",description:'":"'},function(a,b,c){return g.extend({format:"tcl",name:g.textMerge(a,b)},c)},function(a){return{suffix:a}},{type:"other",description:"Binary Expression"},function(a,b,c){return{type:"expression",format:"binary",variant:"operation",operation:g.key(b),left:a,right:c}},function(a){return g.key(a)},{type:"other",description:"Expression List"},function(a,b){return g.listify(a,b)},{type:"other",description:"Function Call"},function(a,b){return g.extend({type:"function",name:a,args:[]},b)},{type:"other",description:"Function Call Arguments"},function(a){return{args:[{type:"identifier",variant:"star",name:a}]}},function(a,b){return g.extend({args:b},a)},function(a){return{filter:g.key(a)}},{type:"other",description:"Error Message"},function(a){return a},{type:"other",description:"Statement"},function(a,b){return g.extend(b,a)},{type:"other",description:"QUERY PLAN"},function(a,b){return{explain:g.isOkay(a)}},{type:"other",description:"QUERY PLAN Keyword"},function(a,b){return g.compose([a,b])},{type:"other",description:"Transaction"},function(a,b,c){return g.extend({type:"statement",variant:"transaction"},a,b)},{type:"other",description:"END Transaction Statement"},function(a,b){return g.keyify([a,b])},{type:"other",description:"BEGIN Transaction Statement"},function(a,b,c){return g.extend({},b)},function(a){return{defer:g.key(a)}},{type:"other",description:"ROLLBACK Statement"},function(a,b){return{type:"statement",variant:g.key(a),to:b}},{type:"other",description:"TO Clause"},function(a){return g.key(a)},{type:"other",description:"SAVEPOINT Statement"},function(a,b){return{type:"statement",variant:a,target:b}},{type:"other",description:"RELEASE Statement"},function(a,b,c){return{type:"statement",variant:g.key(a),target:c}},{type:"other",description:"ALTER TABLE Statement"},function(a,b,c){return{type:"statement",variant:g.key(a)}},{type:"other",description:"ALTER TABLE Keyword"},function(a,b){return g.compose([a,b])},{type:"other",description:"RENAME TO Keyword"},function(a,b){return{action:g.key(a),name:b}},{type:"other",description:"ADD COLUMN Keyword"},function(a,b){return{action:g.key(a),definition:b}},function(a,b){return g.extend(b,a)},{type:"other",description:"WITH Clause"},function(a){return a},function(a,b,c){var d={variant:g.isOkay(b)?"recursive":"common"};return g.isArrayOkay(c)&&(c=c.map(function(a){return g.extend(a,d)})),{with:c}},function(a,b){return g.listify(a,b)},{type:"other",description:"Common Table Expression"},function(a,b){return g.extend({type:"expression",format:"table",variant:"common",target:a},b)},function(a){return{expression:a}},{type:"other",description:"DETACH Statement"},function(a,b,c){return{type:"statement",variant:g.key(a),target:c}},{type:"other",description:"VACUUM Statement"},function(a){return{type:"statement",variant:"vacuum"}},{type:"other",description:"ANALYZE Statement"},function(a,b){return g.extend({type:"statement",variant:g.key(a)},b)},function(a){return{target:a.name}},{type:"other",description:"REINDEX Statement"},function(a){return{target:a.name}},{type:"other",description:"PRAGMA Statement"},function(a,b,c){return{type:"statement",variant:g.key(a),target:b,args:g.isOkay(c)?g.makeArray(c):[]}},function(a){return a},function(a){return/^(yes|no|false|true|0|1)$/i.test(a)},function(a){return{type:"literal",variant:"boolean",normalized:/^(yes|true|1)$/i.test(a)?"1":"0",value:a}},function(a){return{type:"identifier",variant:"name",name:a}},{type:"other",description:"SELECT Statement"},function(a,b,c){return g.extend(a,b,c)},{type:"other",description:"ORDER BY Clause"},function(a){return{order:a.result}},{type:"other",description:"LIMIT Clause"},function(a,b,c){return{limit:g.extend({type:"expression",variant:"limit",start:b},c)}},{type:"other",description:"OFFSET Clause"},function(a,b){return{offset:b}},function(a,b){return g.isArrayOkay(b)?{type:"statement",variant:"compound",statement:a,compound:b}:a},{type:"other",description:"Union Operation"},function(a,b){return{type:"compound",variant:a,statement:b}},function(a,b,c,d){return g.extend({type:"statement",variant:"select"},a,b,c,d)},{type:"other",description:"SELECT Results Clause"},function(a,b){return g.extend({result:b},a)},{type:"other",description:"SELECT Results Modifier"},function(a){return{distinct:!0}},function(a){return{}},{type:"other",description:"FROM Clause"},function(a){return{from:a}},{type:"other",description:"WHERE Clause"},function(a,b){return{where:g.makeArray(b)}},{type:"other",description:"GROUP BY Clause"},function(a,b,c){return g.extend({group:g.makeArray(b)},c)},{type:"other",description:"HAVING Clause"},function(a,b){return{having:b}},function(a,b){return{type:"identifier",variant:"star",name:g.textMerge(a,b)}},function(a,b){return g.textMerge(a,b)},function(a,b){return g.extend(a,b)},function(a,b){return g.listify(a,b)},{type:"other",description:"Qualified Table"},function(a,b){return g.extend(a,b)},{type:"other",description:"Qualified Table Identifier"},function(a,b){return g.extend(a,b)},{type:"other",description:"Qualfied Table Index"},function(a,b){return{index:b}},function(a,b){return{index:g.keyify([a,b])}},{type:"other",description:"SELECT Source"},function(a){return a},{type:"other",description:"Subquery"},function(a,b){return g.extend(a,b)},{type:"other",description:"Alias"},function(a,b){return{alias:b}},function(a,b){return{type:"map",variant:"join",source:a,map:b}},{type:"other",description:"JOIN Operation"},function(a,b,c){return{type:"join",variant:g.key(a),source:b,constraint:c}},{type:"other",description:"JOIN Operator"},function(a,b,c){return g.compose([a,b,c])},function(a,b){return g.compose([a,b])},function(a){return g.textNode(a)},{type:"other",description:"JOIN Constraint"},function(a){return g.extend({type:"constraint",variant:"join"},a)},{type:"other",description:"Join ON Clause"},function(a,b){return{format:g.key(a),on:b}},{type:"other",description:"Join USING Clause"},function(a,b){return{format:g.key(a),using:b}},{type:"other",description:"VALUES Clause"},function(a,b){return g.extend({type:"statement",variant:"select"},b)},function(a,b){return{result:g.listify(a,b)}},function(a){return a},{type:"other",description:"Ordering Expression"},function(a,b,c){return g.extend({type:"expression",variant:"order",expression:a},b,c)},{type:"other",description:"Star"},{type:"other",description:"Fallback Type"},function(a){return a},{type:"other",description:"INSERT Statement"},function(a,b){return g.extend({type:"statement",variant:"insert"},a,b)},{type:"other",description:"INSERT Keyword"},function(a,b){return g.extend({action:g.key(a)},b)},{type:"other",description:"REPLACE Keyword"},function(a){return{action:g.key(a)}},{type:"other",description:"INSERT OR Modifier"},function(a,b){return{or:g.key(b)}},function(a,b){return g.extend({into:a},b)},{type:"other",description:"INTO Clause"},function(a,b){return b},{type:"other",description:"INTO Keyword"},function(a){return{result:a}},{type:"other",description:"Column List"},function(a,b){return{columns:g.listify(a,b)}},function(a){return a},{type:"other",description:"Column Name"},function(a){return{type:"identifier",variant:"column",name:a}},function(a,b){return b},{type:"other",description:"VALUES Keyword"},function(a,b){return g.listify(a,b)},{type:"other",description:"Insert Values List"},function(a){return{type:"values",variant:"list",values:a}},{type:"other",description:"DEFAULT VALUES Clause"},function(a,b){return{type:"values",variant:"default"}},{type:"other",description:"Compound Operator"},{type:"other",description:"UNION Operator"},function(a,b){return g.compose([a,b])},function(a){return a},{type:"other",description:"UPDATE Statement"},function(a,b,c,d,e,f,h){return g.extend({type:"statement",variant:a,into:c},b,d,e,f,h)},{type:"other",description:"UPDATE Keyword"},{type:"other",description:"UPDATE OR Modifier"},function(a){return{or:g.key(a)}},{type:"other",description:"SET Clause"},function(a){return{set:a}},{type:"other",description:"Column Assignment"},function(a,b){return{type:"assignment",target:a,value:b}},{type:"other",description:"DELETE Statement"},function(a,b,c,d,e){return g.extend({type:"statement",variant:a,from:b},c,d,e)},{type:"other",description:"DELETE Keyword"},{type:"other",description:"CREATE Statement"},{type:"other",description:"CREATE TABLE Statement"},function(a,b,c,d){return g.extend({type:"statement",name:c},a,d,b)},function(a,b,c){return g.extend({variant:a,format:g.key(c)},b)},function(a){return{temporary:g.isOkay(a)}},{type:"other",description:"IF NOT EXISTS Modifier"},function(a,b,c){return{condition:g.makeArray({type:"condition",condition:g.keyify([a,b,c])})}},{type:"other",description:"Table Definition"},function(a,b,c){return g.extend({definition:g.listify(a,b)},c)},function(a,b){return{optimization:[{type:"optimization",value:g.keyify([a,b])}]}},function(a){return a},{type:"other",description:"Column Definition"},function(a,b,c){return g.extend({type:"definition",variant:"column",name:a,definition:g.isOkay(c)?c:[]},b)},{type:"other",description:"Column Datatype"},function(a){return{datatype:a}},{type:"other",description:"Column Constraint"},function(a,b){return g.extend(b,a)},{type:"other",description:"Column Constraint Name"},function(a){return{name:a}},{type:"other",description:"FOREIGN KEY Column Constraint"},function(a){return g.extend({variant:"foreign key"},a)},{type:"other",description:"PRIMARY KEY Column Constraint"},function(a,b,c,d){return g.extend(a,c,b,d)},{type:"other",description:"PRIMARY KEY Keyword"},function(a,b){return{type:"constraint",variant:g.keyify([a,b])}},{type:"other",description:"AUTOINCREMENT Keyword"},function(a){return{autoIncrement:!0}},function(a,b){return g.extend({type:"constraint",variant:a},b)},{type:"other",description:"UNIQUE Column Constraint"},{type:"other",description:"NULL Column Constraint"},function(a,b){return g.compose([a,b])},{type:"other",description:"CHECK Column Constraint"},{type:"other",description:"DEFAULT Column Constraint"},function(a,b){return{type:"constraint",variant:g.key(a),value:b}},{type:"other",description:"COLLATE Column Constraint"},function(a){return{type:"constraint",variant:"collate",collate:a}},{type:"other",description:"Table Constraint"},function(a,b){return g.extend({type:"definition",variant:"constraint"},b,a)},{type:"other",description:"Table Constraint Name"},{type:"other",description:"CHECK Table Constraint"},function(a){return{definition:g.makeArray(a)}},{type:"other",description:"PRIMARY KEY Table Constraint"},function(a,b,c){return{definition:g.makeArray(g.extend(a,c)),columns:b}},function(a){return{type:"constraint",variant:g.key(a)}},function(a,b){return g.compose([a,b])},{type:"other",description:"UNIQUE Keyword"},function(a){return g.textNode(a)},{type:"other",description:"PRIMARY KEY Columns"},{type:"other",description:"Indexed Column"},function(a,b,c){return g.extend({type:"identifier",variant:"column",format:"indexed",name:a},b,c)},{type:"other",description:"Column Collation"},function(a){return{collate:a}},{type:"other",description:"Column Direction"},function(a){return{direction:g.key(a)}},function(a,b){return{conflict:g.key(b)}},{type:"other",description:"ON CONFLICT Keyword"},function(a,b){return g.keyify([a,b])},function(a,b){return{type:"constraint",variant:g.key(a),expression:b}},{type:"other",description:"FOREIGN KEY Table Constraint"},function(a,b,c){return g.extend({definition:g.makeArray(g.extend(a,c))},b)},{type:"other",description:"FOREIGN KEY Keyword"},function(a,b){return{type:"constraint",variant:g.keyify([a,b])}},function(a,b,c){return g.extend({type:"constraint",action:b,defer:c},a)},{type:"other",description:"REFERENCES Clause"},function(a,b){return{references:b}},function(a,b){return g.collect([a,b],[])},{type:"other",description:"FOREIGN KEY Action Clause"},function(a,b,c){return{type:"action",variant:g.key(a),action:g.key(c)}},{type:"other",description:"FOREIGN KEY Action"},function(a,b){return g.compose([a,b])},function(a){return g.textNode(a)},function(a,b){return g.compose([a,b])},function(a,b){return{type:"action",variant:g.key(a),action:b}},{type:"other",description:"DEFERRABLE Clause"},function(a,b,c){return g.keyify([a,b,c])},function(a,b){return g.compose([a,b])},function(a){return{definition:g.makeArray(a)}},{type:"other",description:"CREATE INDEX Statement"},function(a,b,c,d,e){return g.extend({type:"statement",target:c,on:d},a,b,e)},function(a,b,c){return g.extend({variant:g.key(a),format:g.key(c)},b)},function(a){return{unique:!0}},{type:"other",description:"ON Clause"},function(a,b,c){return{target:b,columns:c}},{type:"other",description:"CREATE TRIGGER Statement"},function(a,b,c,d,e,f,h,i){return g.extend({type:"statement",target:c,on:e,event:d,by:g.isOkay(f)?f:"row",action:g.makeArray(i)},a,b,h)},function(a,b,c){return g.extend({variant:g.key(a),format:g.key(c)},b)},{type:"other",description:"Conditional Clause"},function(a,b){return g.extend({type:"event"},a,b)},function(a){return{occurs:g.key(a)}},function(a,b){return g.compose([a,b])},{type:"other",description:"Conditional Action"},function(a){return{event:g.key(a)}},function(a,b){return{event:g.key(a),of:b}},function(a,b){return b},"statement",{type:"literal",value:"STATEMENT",description:'"STATEMENT"i'},function(a,b,c){return g.key(c)},function(a,b){return b},{type:"other",description:"Actions Clause"},function(a,b,c){return b},{type:"other",description:"CREATE VIEW Statement"},function(a,b,c,d){return g.extend({type:"statement",target:c,result:d},a,b)},function(a,b,c){return g.extend({variant:g.key(a),format:g.key(c)},b)},{type:"other",description:"CREATE VIRTUAL TABLE Statement"},function(a,b,c,d){return g.extend({type:"statement",target:c,result:d},a,b)},function(a,b,c){return{variant:g.key(a),format:g.key(b)}},function(a,b){return g.extend({type:"module",name:a,args:[]},b)},{type:"other",description:"Module Arguments"},function(a){return{args:a}},{type:"other",description:"DROP Statement"},function(a,b){return g.extend({type:"statement",target:g.extend(b,{variant:a.format})},a)},{type:"other",description:"DROP Keyword"},function(a,b,c){return g.extend({variant:g.key(a),format:b,condition:[]},c)},{type:"other",description:"DROP Type"},function(a){return{condition:g.makeArray(a)}},{type:"other",description:"IF EXISTS Keyword"},function(a,b){return{type:"condition",condition:g.keyify([a,b])}},{type:"other",description:"Unary Operator"},{type:"other",description:"Binary Operator"},function(a){return g.key(a)},{type:"other",description:"Or"},{type:"other",description:"Add"},{type:"other",description:"Subtract"},{type:"other",description:"Multiply"},{type:"other",description:"Divide"},{type:"other",description:"Modulo"},{type:"other",description:"Shift Left"},{type:"other",description:"Shift Right"},{type:"other",description:"Logical AND"},{type:"other",description:"Logical OR"},{type:"other",description:"Less Than"},{type:"other",description:"Greater Than"},{type:"other",description:"Less Than Or Equal"},{type:"other",description:"Greater Than Or Equal"},{type:"other",description:"Equal"},{type:"other",description:"Not Equal"},{type:"other",description:"IS"},function(a){return g.key(a)},{type:"other",description:"Database Identifier"},function(a){return{type:"identifier",variant:"database",name:a}},{type:"other",description:"Table Identifier"},function(a,b){return{type:"identifier",variant:"table",name:g.textMerge(a,b)}},function(a,b){return g.textMerge(a,b)},{type:"other",description:"Column Identifier"},function(a,b){return{type:"identifier",variant:"column",name:g.textMerge(a,b)}},function(){return""},function(a,b){return g.textMerge(a,b)},{type:"other",description:"Collation Identifier"},function(a){return{type:"identifier",variant:"collation",name:a}},{type:"other",description:"Savepoint Indentifier"},function(a){return{type:"identifier",variant:"savepoint",name:a}},{type:"other",description:"Index Identifier"},function(a,b){return{type:"identifier",variant:"index",name:g.textMerge(a,b)}},{type:"other",description:"Trigger Identifier"},function(a,b){return{type:"identifier",variant:"trigger",name:g.textMerge(a,b)}},{type:"other",description:"View Identifier"},function(a,b){return{type:"identifier",variant:"view",name:g.textMerge(a,b)}},{type:"other",description:"Pragma Identifier"},function(a,b){return{type:"identifier",variant:"pragma",name:g.textMerge(a,b)}},{type:"other",description:"CTE Identifier"},function(a,b){return g.extend({type:"identifier",variant:"expression",format:"table",name:a,columns:[]},b)},{type:"other",description:"Table Constraint Identifier"},function(a){return{type:"identifier",variant:"constraint",format:"table",name:a}},{type:"other",description:"Column Constraint Identifier"},function(a){return{type:"identifier",variant:"constraint",format:"column",name:a}},{type:"other",description:"Datatype Name"},function(a){return[a,"text"]},function(a){return[a,"real"]},function(a){return[a,"numeric"]},function(a){return[a,"integer"]},function(a){return[a,"none"]},{type:"other",description:"TEXT Datatype Name"},"n",{type:"literal",value:"N",description:'"N"i'},"var",{type:"literal",value:"VAR",description:'"VAR"i'},"char",{type:"literal",value:"CHAR",description:'"CHAR"i'},"tiny",{type:"literal",value:"TINY",description:'"TINY"i'},"medium",{type:"literal",value:"MEDIUM",description:'"MEDIUM"i'},"long",{type:"literal",value:"LONG",description:'"LONG"i'},"text",{type:"literal",value:"TEXT",description:'"TEXT"i'},"clob",{type:"literal",value:"CLOB",description:'"CLOB"i'},{type:"other",description:"REAL Datatype Name"},"float",{type:"literal",value:"FLOAT",description:'"FLOAT"i'},"real",{type:"literal",value:"REAL",description:'"REAL"i'},{type:"other",description:"DOUBLE Datatype Name"},"double",{type:"literal",value:"DOUBLE",description:'"DOUBLE"i'},/^[\t ]/,{type:"class",value:"[\\t ]",description:"[\\t ]"},"precision",{type:"literal",value:"PRECISION",description:'"PRECISION"i'},function(a,b){return g.compose([a,b],"")},{type:"other",description:"NUMERIC Datatype Name"},"numeric",{type:"literal",value:"NUMERIC",description:'"NUMERIC"i'},"decimal",{type:"literal",value:"DECIMAL",description:'"DECIMAL"i'},"boolean",{type:"literal",value:"BOOLEAN",description:'"BOOLEAN"i'},"date",{type:"literal",value:"DATE",description:'"DATE"i'},"time",{type:"literal",value:"TIME",description:'"TIME"i'},"stamp",{type:"literal",value:"STAMP",description:'"STAMP"i'},{type:"other",description:"INTEGER Datatype Name"},"int",{type:"literal",value:"INT",description:'"INT"i'},"2",{type:"literal",
value:"2",description:'"2"'},"4",{type:"literal",value:"4",description:'"4"'},"8",{type:"literal",value:"8",description:'"8"'},"eger",{type:"literal",value:"EGER",description:'"EGER"i'},"big",{type:"literal",value:"BIG",description:'"BIG"i'},"small",{type:"literal",value:"SMALL",description:'"SMALL"i'},{type:"other",description:"BLOB Datatype Name"},"blob",{type:"literal",value:"BLOB",description:'"BLOB"i'},/^[a-z0-9$_]/i,{type:"class",value:"[a-z0-9\\$\\_]i",description:"[a-z0-9\\$\\_]i"},function(a){return g.key(a)},/^[ \t]/,{type:"class",value:"[ \\t]",description:"[ \\t]"},"]",{type:"literal",value:"]",description:'"]"'},/^[^\]]/,{type:"class",value:"[^\\]]",description:"[^\\]]"},'"',{type:"literal",value:'"',description:"'\"'"},'""',{type:"literal",value:'""',description:"'\"\"'"},/^[^"]/,{type:"class",value:'[^\\"]',description:'[^\\"]'},function(a){return g.unescape(a,'"')},"'",{type:"literal",value:"'",description:'"\'"'},function(a){return g.unescape(a,"'")},"`",{type:"literal",value:"`",description:"'`'"},"``",{type:"literal",value:"``",description:"'``'"},/^[^`]/,{type:"class",value:"[^\\`]",description:"[^\\`]"},function(a){return g.unescape(a,"`")},{type:"other",description:"Open Bracket"},"[",{type:"literal",value:"[",description:'"["'},{type:"other",description:"Close Bracket"},{type:"other",description:"Open Parenthesis"},"(",{type:"literal",value:"(",description:'"("'},{type:"other",description:"Close Parenthesis"},")",{type:"literal",value:")",description:'")"'},{type:"other",description:"Comma"},",",{type:"literal",value:",",description:'","'},{type:"other",description:"Period"},".",{type:"literal",value:".",description:'"."'},{type:"other",description:"Asterisk"},"*",{type:"literal",value:"*",description:'"*"'},{type:"other",description:"Question Mark"},"?",{type:"literal",value:"?",description:'"?"'},{type:"other",description:"Single Quote"},{type:"other",description:"Double Quote"},{type:"other",description:"Backtick"},{type:"literal",value:"`",description:'"`"'},{type:"other",description:"Tilde"},"~",{type:"literal",value:"~",description:'"~"'},{type:"other",description:"Plus"},"+",{type:"literal",value:"+",description:'"+"'},{type:"other",description:"Minus"},"-",{type:"literal",value:"-",description:'"-"'},"=",{type:"literal",value:"=",description:'"="'},{type:"other",description:"Ampersand"},"&",{type:"literal",value:"&",description:'"&"'},{type:"other",description:"Pipe"},"|",{type:"literal",value:"|",description:'"|"'},"%",{type:"literal",value:"%",description:'"%"'},"<",{type:"literal",value:"<",description:'"<"'},">",{type:"literal",value:">",description:'">"'},{type:"other",description:"Exclamation"},"!",{type:"literal",value:"!",description:'"!"'},{type:"other",description:"Semicolon"},";",{type:"literal",value:";",description:'";"'},{type:"other",description:"Colon"},{type:"other",description:"Forward Slash"},"/",{type:"literal",value:"/",description:'"/"'},{type:"other",description:"Backslash"},"\\",{type:"literal",value:"\\",description:'"\\\\"'},"abort",{type:"literal",value:"ABORT",description:'"ABORT"i'},"action",{type:"literal",value:"ACTION",description:'"ACTION"i'},"add",{type:"literal",value:"ADD",description:'"ADD"i'},"after",{type:"literal",value:"AFTER",description:'"AFTER"i'},"all",{type:"literal",value:"ALL",description:'"ALL"i'},"alter",{type:"literal",value:"ALTER",description:'"ALTER"i'},"analyze",{type:"literal",value:"ANALYZE",description:'"ANALYZE"i'},"and",{type:"literal",value:"AND",description:'"AND"i'},"as",{type:"literal",value:"AS",description:'"AS"i'},"asc",{type:"literal",value:"ASC",description:'"ASC"i'},"attach",{type:"literal",value:"ATTACH",description:'"ATTACH"i'},"autoincrement",{type:"literal",value:"AUTOINCREMENT",description:'"AUTOINCREMENT"i'},"before",{type:"literal",value:"BEFORE",description:'"BEFORE"i'},"begin",{type:"literal",value:"BEGIN",description:'"BEGIN"i'},"between",{type:"literal",value:"BETWEEN",description:'"BETWEEN"i'},"by",{type:"literal",value:"BY",description:'"BY"i'},"cascade",{type:"literal",value:"CASCADE",description:'"CASCADE"i'},"case",{type:"literal",value:"CASE",description:'"CASE"i'},"cast",{type:"literal",value:"CAST",description:'"CAST"i'},"check",{type:"literal",value:"CHECK",description:'"CHECK"i'},"collate",{type:"literal",value:"COLLATE",description:'"COLLATE"i'},"column",{type:"literal",value:"COLUMN",description:'"COLUMN"i'},"commit",{type:"literal",value:"COMMIT",description:'"COMMIT"i'},"conflict",{type:"literal",value:"CONFLICT",description:'"CONFLICT"i'},"constraint",{type:"literal",value:"CONSTRAINT",description:'"CONSTRAINT"i'},"create",{type:"literal",value:"CREATE",description:'"CREATE"i'},"cross",{type:"literal",value:"CROSS",description:'"CROSS"i'},"current_date",{type:"literal",value:"CURRENT_DATE",description:'"CURRENT_DATE"i'},"current_time",{type:"literal",value:"CURRENT_TIME",description:'"CURRENT_TIME"i'},"current_timestamp",{type:"literal",value:"CURRENT_TIMESTAMP",description:'"CURRENT_TIMESTAMP"i'},"database",{type:"literal",value:"DATABASE",description:'"DATABASE"i'},"default",{type:"literal",value:"DEFAULT",description:'"DEFAULT"i'},"deferrable",{type:"literal",value:"DEFERRABLE",description:'"DEFERRABLE"i'},"deferred",{type:"literal",value:"DEFERRED",description:'"DEFERRED"i'},"delete",{type:"literal",value:"DELETE",description:'"DELETE"i'},"desc",{type:"literal",value:"DESC",description:'"DESC"i'},"detach",{type:"literal",value:"DETACH",description:'"DETACH"i'},"distinct",{type:"literal",value:"DISTINCT",description:'"DISTINCT"i'},"drop",{type:"literal",value:"DROP",description:'"DROP"i'},"each",{type:"literal",value:"EACH",description:'"EACH"i'},"else",{type:"literal",value:"ELSE",description:'"ELSE"i'},"end",{type:"literal",value:"END",description:'"END"i'},"escape",{type:"literal",value:"ESCAPE",description:'"ESCAPE"i'},"except",{type:"literal",value:"EXCEPT",description:'"EXCEPT"i'},"exclusive",{type:"literal",value:"EXCLUSIVE",description:'"EXCLUSIVE"i'},"exists",{type:"literal",value:"EXISTS",description:'"EXISTS"i'},"explain",{type:"literal",value:"EXPLAIN",description:'"EXPLAIN"i'},"fail",{type:"literal",value:"FAIL",description:'"FAIL"i'},"for",{type:"literal",value:"FOR",description:'"FOR"i'},"foreign",{type:"literal",value:"FOREIGN",description:'"FOREIGN"i'},"from",{type:"literal",value:"FROM",description:'"FROM"i'},"full",{type:"literal",value:"FULL",description:'"FULL"i'},"glob",{type:"literal",value:"GLOB",description:'"GLOB"i'},"group",{type:"literal",value:"GROUP",description:'"GROUP"i'},"having",{type:"literal",value:"HAVING",description:'"HAVING"i'},"if",{type:"literal",value:"IF",description:'"IF"i'},"ignore",{type:"literal",value:"IGNORE",description:'"IGNORE"i'},"immediate",{type:"literal",value:"IMMEDIATE",description:'"IMMEDIATE"i'},"in",{type:"literal",value:"IN",description:'"IN"i'},"index",{type:"literal",value:"INDEX",description:'"INDEX"i'},"indexed",{type:"literal",value:"INDEXED",description:'"INDEXED"i'},"initially",{type:"literal",value:"INITIALLY",description:'"INITIALLY"i'},"inner",{type:"literal",value:"INNER",description:'"INNER"i'},"insert",{type:"literal",value:"INSERT",description:'"INSERT"i'},"instead",{type:"literal",value:"INSTEAD",description:'"INSTEAD"i'},"intersect",{type:"literal",value:"INTERSECT",description:'"INTERSECT"i'},"into",{type:"literal",value:"INTO",description:'"INTO"i'},"isnull",{type:"literal",value:"ISNULL",description:'"ISNULL"i'},"join",{type:"literal",value:"JOIN",description:'"JOIN"i'},"key",{type:"literal",value:"KEY",description:'"KEY"i'},"left",{type:"literal",value:"LEFT",description:'"LEFT"i'},"like",{type:"literal",value:"LIKE",description:'"LIKE"i'},"limit",{type:"literal",value:"LIMIT",description:'"LIMIT"i'},"match",{type:"literal",value:"MATCH",description:'"MATCH"i'},"natural",{type:"literal",value:"NATURAL",description:'"NATURAL"i'},"no",{type:"literal",value:"NO",description:'"NO"i'},"notnull",{type:"literal",value:"NOTNULL",description:'"NOTNULL"i'},"null",{type:"literal",value:"NULL",description:'"NULL"i'},"of",{type:"literal",value:"OF",description:'"OF"i'},"offset",{type:"literal",value:"OFFSET",description:'"OFFSET"i'},"on",{type:"literal",value:"ON",description:'"ON"i'},"or",{type:"literal",value:"OR",description:'"OR"i'},"order",{type:"literal",value:"ORDER",description:'"ORDER"i'},"outer",{type:"literal",value:"OUTER",description:'"OUTER"i'},"plan",{type:"literal",value:"PLAN",description:'"PLAN"i'},"pragma",{type:"literal",value:"PRAGMA",description:'"PRAGMA"i'},"primary",{type:"literal",value:"PRIMARY",description:'"PRIMARY"i'},"query",{type:"literal",value:"QUERY",description:'"QUERY"i'},"raise",{type:"literal",value:"RAISE",description:'"RAISE"i'},"recursive",{type:"literal",value:"RECURSIVE",description:'"RECURSIVE"i'},"references",{type:"literal",value:"REFERENCES",description:'"REFERENCES"i'},"regexp",{type:"literal",value:"REGEXP",description:'"REGEXP"i'},"reindex",{type:"literal",value:"REINDEX",description:'"REINDEX"i'},"release",{type:"literal",value:"RELEASE",description:'"RELEASE"i'},"rename",{type:"literal",value:"RENAME",description:'"RENAME"i'},"replace",{type:"literal",value:"REPLACE",description:'"REPLACE"i'},"restrict",{type:"literal",value:"RESTRICT",description:'"RESTRICT"i'},"right",{type:"literal",value:"RIGHT",description:'"RIGHT"i'},"rollback",{type:"literal",value:"ROLLBACK",description:'"ROLLBACK"i'},"row",{type:"literal",value:"ROW",description:'"ROW"i'},"rowid",{type:"literal",value:"ROWID",description:'"ROWID"i'},"savepoint",{type:"literal",value:"SAVEPOINT",description:'"SAVEPOINT"i'},"select",{type:"literal",value:"SELECT",description:'"SELECT"i'},"set",{type:"literal",value:"SET",description:'"SET"i'},"table",{type:"literal",value:"TABLE",description:'"TABLE"i'},"temp",{type:"literal",value:"TEMP",description:'"TEMP"i'},"temporary",{type:"literal",value:"TEMPORARY",description:'"TEMPORARY"i'},"then",{type:"literal",value:"THEN",description:'"THEN"i'},"to",{type:"literal",value:"TO",description:'"TO"i'},"transaction",{type:"literal",value:"TRANSACTION",description:'"TRANSACTION"i'},"trigger",{type:"literal",value:"TRIGGER",description:'"TRIGGER"i'},"union",{type:"literal",value:"UNION",description:'"UNION"i'},"unique",{type:"literal",value:"UNIQUE",description:'"UNIQUE"i'},"update",{type:"literal",value:"UPDATE",description:'"UPDATE"i'},"using",{type:"literal",value:"USING",description:'"USING"i'},"vacuum",{type:"literal",value:"VACUUM",description:'"VACUUM"i'},"values",{type:"literal",value:"VALUES",description:'"VALUES"i'},"view",{type:"literal",value:"VIEW",description:'"VIEW"i'},"virtual",{type:"literal",value:"VIRTUAL",description:'"VIRTUAL"i'},"when",{type:"literal",value:"WHEN",description:'"WHEN"i'},"where",{type:"literal",value:"WHERE",description:'"WHERE"i'},"with",{type:"literal",value:"WITH",description:'"WITH"i'},"without",{type:"literal",value:"WITHOUT",description:'"WITHOUT"i'},function(a){return g.key(a)},function(){return null},{type:"other",description:"Line Comment"},"--",{type:"literal",value:"--",description:'"--"'},/^[\n\x0B\f\r]/,{type:"class",value:"[\\n\\v\\f\\r]",description:"[\\n\\v\\f\\r]"},{type:"any",description:"any character"},{type:"other",description:"Block Comment"},"/*",{type:"literal",value:"/*",description:'"/*"'},"*/",{type:"literal",value:"*/",description:'"*/"'},/^[\n\x0B\f\r\t ]/,{type:"class",value:"[\\n\\v\\f\\r\\t ]",description:"[\\n\\v\\f\\r\\t ]"},{type:"other",description:"Whitespace"},"__TODO__",{type:"literal",value:"__TODO__",description:'"__TODO__"'}],q=[i('%;ȝ/H#;"/?$;!." &"/1$;"/($8$: $!!)($\'#(#\'#("\'#&\'#'),i("%;e/B#;ȝ/9$$;$0#*;$&/)$8#:!#\"\" )(#'#(\"'#&'#"),i("$;ƒ0#*;ƒ&"),i("$;ƒ/&#0#*;ƒ&&&#"),i("%;#/:#;e/1$;ȝ/($8#:\"#!!)(#'#(\"'#&'#"),i('<%;\'.# &;&/1#;ȝ/($8":$"!!)("\'#&\'#=." 7#'),i(";(./ &;*.) &;6.# &;)"),i("<%;&/N#;ȝ/E$;^/<$;ȝ/3$;%/*$8%:&%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7%"),i("<%;ſ/C#;%/:$;ȝ/1$;ƀ/($8$:($!\")($'#(#'#(\"'#&'#=.\" 7'"),i(";+.G &;-.A &;/.; &;2.5 &;X./ &;a.) &;F.# &;š"),i('<%;ň/2#;&/)$8":*""! )("\'#&\'#=." 7)'),i("<%;ƨ/i#;ȝ/`$;ſ/W$;%/N$;ȝ/E$;,/<$;ȝ/3$;ƀ/*$8(:,(#'$\")(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7+"),i("<%;ƞ/:#;ȝ/1$;C/($8#:.#! )(#'#(\"'#&'#=.\" 7-"),i('<%;./;#;ȝ/2$;/)$8#:0#"" )(#\'#("\'#&\'#=." 7/'),i('<%;=." &"/;#;ǃ/2$;ȝ/)$8#:2#""!)(#\'#("\'#&\'#=." 71'),i("<%;Ƨ/#;ȝ/$;%.\" &\"/|$;ȝ/s$$;0/&#0#*;0&&&#/]$;ȝ/T$;1.\" &\"/F$;ȝ/=$;ƿ/4$;ȝ/+$8*:4*$)'%#)(*'#()'#(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 73"),i("<%;ȏ/i#;ȝ/`$;%/W$;ȝ/N$;ȃ/E$;ȝ/<$;%/3$;ȝ/*$8(:6(#'%!)(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 75"),i("<%;ƾ/D#;ȝ/;$;%/2$;ȝ/)$8$:8$\"#!)($'#(#'#(\"'#&'#=.\" 77"),i("<%;ǰ/_#;ȝ/V$;ſ/M$;ȝ/D$;3/;$;ȝ/2$;ƀ/)$8'::'\"&\")(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 79"),i("<%;4.# &;5/' 8!:<!! )=.\" 7;"),i("<%;ǎ/' 8!:>!! )=.\" 7="),i("%;Ǻ.) &;Ɩ.# &;ǅ/M#;ȝ/D$;Ɓ/;$;ȝ/2$;d/)$8%:?%\"$ )(%'#($'#(#'#(\"'#&'#"),i(";7.A &;8.; &;:.5 &;?./ &;@.) &;.# &;]"),i("<%;)/N#;ȝ/E$;ƪ/<$;ȝ/3$;ť/*$8%:A%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7@"),i("<%;)/#;ȝ/~$;=.\" &\"/p$;Ǟ./ &;Ǌ.) &;ǳ.# &;Ǡ/U$;ȝ/L$;%/C$;ȝ/:$;9.\" &\"/,$8(:C(%'%$\" )(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7B"),i('<%;ǀ/;#;ȝ/2$;%/)$8#:E#"" )(#\'#("\'#&\'#=." 7D'),i('<%;)/;#;ȝ/2$;;/)$8#:G#"" )(#\'#("\'#&\'#=." 7F'),i('<%3I""5"7J.# &;>/;#;ǥ/2$;ȝ/)$8#:K#""!)(#\'#("\'#&\'#=." 7H'),i('<%;Ǚ/@#;ȝ/7$;=." &"/)$8#:K#"" )(#\'#("\'#&\'#=." 7L'),i('%;ǣ/1#;ȝ/($8":M"!!)("\'#&\'#'),i('%3N""5#7O/1#;ȝ/($8":P"!!)("\'#&\'#'),i("<%;)/#;ȝ/z$;=.\" &\"/l$;Ƥ/c$;ȝ/Z$;&/Q$;ȝ/H$;Ɲ/?$;ȝ/6$;&/-$8*:R*&)'&$\" )(*'#()'#(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7Q"),i("<%;)/]#;ȝ/T$;=.\" &\"/F$;ǐ/=$;ȝ/4$;A/+$8&:T&$%#\" )(&'#(%'#($'#(#'#(\"'#&'#=.\" 7S"),i(";B.# &;ş"),i("%;ſ/I#;.# &;_/:$;ȝ/1$;ƀ/($8$:U$!\")($'#(#'#(\"'#&'#"),i('<%;ů/@#;ȝ/7$;D." &"/)$8#:W#"" )(#\'#("\'#&\'#=." 7V'),i("<%;ſ/R#;N/I$;ȝ/@$;E.\" &\"/2$;ƀ/)$8%:Y%\"#!)(%'#($'#(#'#(\"'#&'#=.\" 7X"),i("%;Ɓ/C#;ȝ/:$;N/1$;ȝ/($8$:($!!)($'#(#'#(\"'#&'#"),i(";O.5 &;I./ &;L.) &;G.# &;H"),i('<%;ǥ/1#;ȝ/($8":["!!)("\'#&\'#=." 7Z'),i('<%;Ʊ.) &;Ƴ.# &;Ʋ/1#;ȝ/($8":]"!!)("\'#&\'#=." 7\\'),i("<%;J/' 8!:_!! )=.\" 7^"),i("<%;ƅ/A#$;K0#*;K&/1$;ƅ/($8#:a#!!)(#'#(\"'#&'#=.\" 7`"),i('2b""6b7c.) &4d""5!7e'),i('<%4g""5!7h/1#;J/($8":i"! )("\'#&\'#=." 7f'),i('<%;Ɖ.# &;Ɗ/\' 8!:"!! )=." 7j'),i('%;M." &"/2#;O/)$8":k""! )("\'#&\'#'),i(";P.# &;U"),i('%;Q/7#;T." &"/)$8":l""! )("\'#&\'#'),i('<;R.# &;S=." 7m'),i('%$;W/&#0#*;W&&&#/7#;S." &"/)$8":n""! )("\'#&\'#'),i('%;Ƃ/?#$;W/&#0#*;W&&&#/)$8":o""! )("\'#&\'#'),i('<%3q""5!7r/T#4s""5!7t." &"/@$$;W/&#0#*;W&&&#/*$8#:u##"! )(#\'#("\'#&\'#=." 7p'),i('<%3w""5"7x/9#$;V0#*;V&/)$8":y""! )("\'#&\'#=." 7v'),i('4z""5!7{'),i('4|""5!7}'),i("<%;Y.) &;Z.# &;[/' 8!:!! )=.\" 7~"),i('<%;Ƅ/l#%4""5!7/?#$4|""5!7}0)*4|""5!7}&/#$+")("\'#&\'#." &"/2$;ȝ/)$8#:#""!)(#\'#("\'#&\'#=." 7'),i('<%4""5!7/H#$;Ŷ/&#0#*;Ŷ&&&#/2$;ȝ/)$8#:#""!)(#\'#("\'#&\'#=." 7'),i('<%2""67/o#$;Ŷ.) &2""67/2#0/*;Ŷ.) &2""67&&&#/A$;ȝ/8$;\\." &"/*$8$:$##" )($\'#(#\'#("\'#&\'#=." 7'),i('%;ź/1#;ȝ/($8":"!!)("\'#&\'#'),i("<%;)/N#;ȝ/E$;ŉ/<$;ȝ/3$;&/*$8%:%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7"),i('%;Ɲ.# &;ǩ/1#;ȝ/($8":"!!)("\'#&\'#'),i('<%;%/B#;ȝ/9$$;`0#*;`&/)$8#:#"" )(#\'#("\'#&\'#=." 7'),i("%;Ɓ/:#;%/1$;ȝ/($8#:U#!!)(#'#(\"'#&'#"),i('<%;Ÿ/R#;ſ/I$;b." &"/;$;ȝ/2$;ƀ/)$8%:%"$")(%\'#($\'#(#\'#("\'#&\'#=." 7'),i('<%;Ã/\' 8!:!! ).A &%;c." &"/2#;_/)$8":""! )("\'#&\'#=." 7'),i('%;ƻ/1#;ȝ/($8":"!!)("\'#&\'#'),i("<%;I/' 8!:!! )=.\" 7"),i('<%;f." &"/;#;h/2$;ȝ/)$8#:#""!)(#\'#("\'#&\'#=." 7'),i('<%;Ǆ/@#;ȝ/7$;g." &"/)$8#:#"" )(#\'#("\'#&\'#=." 7'),i("<%;ǯ/D#;ȝ/;$;Ǭ/2$;ȝ/)$8$:¡$\"#!)($'#(#'#(\"'#&'#=.\" 7 "),i(";y.M &;ä.G &;Ń.A &;i.; &;s.5 &;n./ &;q.) &;r.# &;"),i('<%;k/A#;!." &"/3$;j/*$8#:£##"! )(#\'#("\'#&\'#=." 7¢'),i('<%;Ƭ.# &;ƿ/@#;ȝ/7$;l." &"/)$8#:¥#"" )(#\'#("\'#&\'#=." 7¤'),i('<%;ƣ/O#;ȝ/F$;m." &"/8$;l." &"/*$8$:§$##! )($\'#(#\'#("\'#&\'#=." 7¦'),i('%;ȅ/1#;ȝ/($8":$"!!)("\'#&\'#'),i('%;Ʒ.) &;Ǐ.# &;ǂ/1#;ȝ/($8":¨"!!)("\'#&\'#'),i('<%;Ǻ/N#;ȝ/E$;l." &"/7$;o." &"/)$8$:ª$"# )($\'#(#\'#("\'#&\'#=." 7©'),i("<%;Ȅ/Q#;ȝ/H$;p.\" &\"/:$;Ŧ/1$;ȝ/($8%:(%!!)(%'#($'#(#'#(\"'#&'#=.\" 7«"),i('%;ǽ/1#;ȝ/($8":¬"!!)("\'#&\'#'),i('<%;p/;#;Ŧ/2$;ȝ/)$8#:®#""!)(#\'#("\'#&\'#=." 7­'),i("<%;ǵ/S#;ȝ/J$;p.\" &\"/<$;Ŧ/3$;ȝ/*$8%:°%#$\"!)(%'#($'#(#'#(\"'#&'#=.\" 7¯"),i("<%;t/N#;ş/E$;ȝ/<$;u/3$;ȝ/*$8%:²%#$#!)(%'#($'#(#'#(\"'#&'#=.\" 7±"),i("<%;ƛ/D#;ȝ/;$;Ȁ/2$;ȝ/)$8$:´$\"#!)($'#(#'#(\"'#&'#=.\" 7³"),i(";v.# &;w"),i("<%;Ƕ/M#;ȝ/D$;Ȅ/;$;ȝ/2$;ş/)$8%:¶%\"$ )(%'#($'#(#'#(\"'#&'#=.\" 7µ"),i('<%;Ƙ/I#;ȝ/@$;x." &"/2$;õ/)$8$:¸$"# )($\'#(#\'#("\'#&\'#=." 7·'),i('%;ƫ/1#;ȝ/($8":¬"!!)("\'#&\'#'),i('%;z/2#;/)$8":¹""! )("\'#&\'#'),i('<%;{." &"/1#;ȝ/($8":»"!!)("\'#&\'#=." 7º'),i("%;ȑ/J#;ȝ/A$;|.\" &\"/3$;}/*$8$:¼$##! )($'#(#'#(\"'#&'#"),i('%;Ǳ/1#;ȝ/($8":¬"!!)("\'#&\'#'),i("%;/B#;ȝ/9$$;~0#*;~&/)$8#:½#\"\" )(#'#(\"'#&'#"),i("%;Ɓ/:#;/1$;ȝ/($8#:U#!!)(#'#(\"'#&'#"),i('<%;ū/2#;/)$8":¿""! )("\'#&\'#=." 7¾'),i("%;ƞ/:#;ȝ/1$;/($8#:À#! )(#'#(\"'#&'#"),i("%;ſ/C#;/:$;ȝ/1$;ƀ/($8$:\"$!\")($'#(#'#(\"'#&'#"),i(";.5 &;./ &;.) &;.# &;"),i("<%;ƺ/f#;ȝ/]$%;ƴ/,#;ȝ/#$+\")(\"'#&'#.\" &\"/<$;Ş/3$;ȝ/*$8%:Â%#$\"!)(%'#($'#(#'#(\"'#&'#=.\" 7Á"),i('<%;ȋ/1#;ȝ/($8":Ä"!!)("\'#&\'#=." 7Ã'),i('<%;Ɯ/@#;ȝ/7$;." &"/)$8#:Æ#"" )(#\'#("\'#&\'#=." 7Å'),i('%;ş.) &;ŧ.# &;Ş/1#;ȝ/($8":Ç"!!)("\'#&\'#'),i('<%;Ǵ/I#;ȝ/@$;." &"/2$;ȝ/)$8$:Æ$"#!)($\'#(#\'#("\'#&\'#=." 7È'),i('%;ş.) &;ŧ.# &;ť/1#;ȝ/($8":É"!!)("\'#&\'#'),i("<%;ǭ/S#;ȝ/J$;Ū/A$;ȝ/8$;.\" &\"/*$8%:Ë%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7Ê"),i("%;Ƌ/:#;/1$;ȝ/($8#:Ì#!!)(#'#(\"'#&'#.M &%;ſ/C#;/:$;ȝ/1$;ƀ/($8$:Ì$!\")($'#(#'#(\"'#&'#"),i(";.) &;.# &;"),i("%;N.# &;I/' 8!:Ì!! )"),i('%;ŷ/<#9:Í ! -""&!&#/($8":Î"!!)("\'#&\'#'),i("%;ŷ/' 8!:Ï!! )"),i(";./ &;Å.) &;Û.# &;â"),i('<%;/X#;ȝ/O$;." &"/A$;ȝ/8$;." &"/*$8%:Ñ%#$" )(%\'#($\'#(#\'#("\'#&\'#=." 7Ð'),i("<%;Ǫ/L#;ȝ/C$;ƥ/:$;ȝ/1$;À/($8%:Ó%! )(%'#($'#(#'#(\"'#&'#=.\" 7Ò"),i("<%;ǟ/S#;ȝ/J$;%/A$;ȝ/8$;.\" &\"/*$8%:Õ%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7Ô"),i('<%;/2#;%/)$8":×""! )("\'#&\'#=." 7Ö'),i(";.# &;Ɓ"),i('%;ǧ/1#;ȝ/($8":¬"!!)("\'#&\'#'),i("%;/B#;ȝ/9$$;0#*;&/)$8#:Ø#\"\" )(#'#(\"'#&'#"),i("<%;Ø/D#;ȝ/;$;/2$;ȝ/)$8$:Ú$\"#!)($'#(#'#(\"'#&'#=.\" 7Ù"),i(";.# &;¿"),i('%;/U#; ." &"/G$;¡." &"/9$;¢." &"/+$8$:Û$$#"! )($\'#(#\'#("\'#&\'#'),i('<%;Ǿ/R#;ȝ/I$;." &"/;$;ȝ/2$;/)$8%:Ý%"" )(%\'#($\'#(#\'#("\'#&\'#=." 7Ü'),i('<;.# &;=." 7Þ'),i('%;ƻ/1#;ȝ/($8":ß"!!)("\'#&\'#'),i('%;ƚ/1#;ȝ/($8":à"!!)("\'#&\'#'),i("%;¤/B#;ȝ/9$$;0#*;&/)$8#:½#\"\" )(#'#(\"'#&'#"),i("%;Ɓ/:#;¤/1$;ȝ/($8#:(#!!)(#'#(\"'#&'#"),i("<%;ǈ/C#;ȝ/:$;¨/1$;ȝ/($8$:â$!!)($'#(#'#(\"'#&'#=.\" 7á"),i("<%;Ȑ/D#;ȝ/;$;%/2$;ȝ/)$8$:ä$\"#!)($'#(#'#(\"'#&'#=.\" 7ã"),i("<%;ǋ/e#;ȝ/\\$;ƥ/S$;ȝ/J$;_/A$;ȝ/8$;£.\" &\"/*$8':æ'#&\" )(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7å"),i("<%;ǌ/D#;ȝ/;$;%/2$;ȝ/)$8$:è$\"#!)($'#(#'#(\"'#&'#=.\" 7ç"),i(";¥.# &;§"),i('%;¦." &"/2#;Ã/)$8":é""! )("\'#&\'#'),i('%;ŷ/2#;Ƃ/)$8":ê""! )("\'#&\'#'),i('%;%/@#;ȝ/7$;³." &"/)$8#:ë#"" )(#\'#("\'#&\'#'),i(";´.# &;©"),i("%;«/B#;ȝ/9$$;ª0#*;ª&/)$8#:ì#\"\" )(#'#(\"'#&'#"),i("%;Ɓ/:#;«/1$;ȝ/($8#:$#!!)(#'#(\"'#&'#"),i(";±.) &;¬.# &;²"),i('<%;­/@#;ȝ/7$;®." &"/)$8#:î#"" )(#\'#("\'#&\'#=." 7í'),i('<%;ş/@#;ȝ/7$;³." &"/)$8#:ð#"" )(#\'#("\'#&\'#=." 7ï'),i('<;¯.# &;°=." 7ñ'),i("%;ǒ/V#;ȝ/M$;ƥ/D$;ȝ/;$;ŷ/2$;ȝ/)$8&:ò&\"%!)(&'#(%'#($'#(#'#(\"'#&'#"),i("%;=/;#;ǒ/2$;ȝ/)$8#:ó#\"\"!)(#'#(\"'#&'#"),i("<%;ſ/C#;¨/:$;ȝ/1$;ƀ/($8$:õ$!\")($'#(#'#(\"'#&'#=.\" 7ô"),i('<%;/7#;³." &"/)$8":÷""! )("\'#&\'#=." 7ö'),i('<%%;ƞ/K#%%<;Ŷ=.##&&!&\'#/,#;ȝ/#$+")("\'#&\'#/#$+")("\'#&\'#." &"/;#;ŷ/2$;ȝ/)$8#:ù#""!)(#\'#("\'#&\'#=." 7ø'),i("%;«/H#;ȝ/?$$;µ/&#0#*;µ&&&#/)$8#:ú#\"\" )(#'#(\"'#&'#"),i("<%;¶/S#;ȝ/J$;«/A$;ȝ/8$;¼.\" &\"/*$8%:ü%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7û"),i('<%;·." &"/J#;ȝ/A$;¸." &"/3$;Ǜ/*$8$:þ$##! )($\'#(#\'#("\'#&\'#=." 7ý'),i('%;ǡ/1#;ȝ/($8":M"!!)("\'#&\'#'),i(";¹.# &;»"),i('%;ǝ.) &;ǹ.# &;ǉ/@#;ȝ/7$;º." &"/)$8#:ÿ#"" )(#\'#("\'#&\'#'),i('%;ǫ/1#;ȝ/($8":Ā"!!)("\'#&\'#'),i('%;ǔ.# &;ư/1#;ȝ/($8":Ā"!!)("\'#&\'#'),i("<%;½.# &;¾/' 8!:Ă!! )=.\" 7ā"),i('<%;Ǩ/;#;ȝ/2$;%/)$8#:Ą#"" )(#\'#("\'#&\'#=." 7ă'),i('<%;Ȋ/;#;ȝ/2$;Î/)$8#:Ć#"" )(#\'#("\'#&\'#=." 7ą'),i('<%;Ȍ/;#;ȝ/2$;Ó/)$8#:Ĉ#"" )(#\'#("\'#&\'#=." 7ć'),i("%;Â/B#;ȝ/9$$;Á0#*;Á&/)$8#:ĉ#\"\" )(#'#(\"'#&'#"),i("%;Ɓ/:#;Â/1$;ȝ/($8#:Ċ#!!)(#'#(\"'#&'#"),i('<%;%/X#;ȝ/O$;Đ." &"/A$;ȝ/8$;đ." &"/*$8%:Č%#$" )(%\'#($\'#(#\'#("\'#&\'#=." 7ċ'),i('<;ƃ=." 7č'),i("<%;Ƿ.5 &;Ǻ./ &;Ɩ.) &;ǅ.# &;ǎ/' 8!:ď!! )=.\" 7Ď"),i('<%;Æ/;#;ȝ/2$;Ê/)$8#:đ#"" )(#\'#("\'#&\'#=." 7Đ'),i(";Ç.# &;È"),i('<%;Ǖ/@#;ȝ/7$;É." &"/)$8#:ē#"" )(#\'#("\'#&\'#=." 7Ē'),i('<%;Ƿ/1#;ȝ/($8":ĕ"!!)("\'#&\'#=." 7Ĕ'),i('<%;ǩ/;#;ȝ/2$;Ä/)$8#:ė#"" )(#\'#("\'#&\'#=." 7Ė'),i('%;Ë/2#;Í/)$8":Ę""! )("\'#&\'#'),i('<%;Ì/2#;ū/)$8":Ě""! )("\'#&\'#=." 7ę'),i('<%;ǘ/,#;ȝ/#$+")("\'#&\'#=." 7ě'),i('<%;Ñ.) &;Ö.# &;×/1#;ȝ/($8":Ĝ"!!)("\'#&\'#=." 7ć'),i("<%;ſ/T#;Ð/K$;ȝ/B$$;Ï0#*;Ï&/2$;ƀ/)$8%:Ğ%\"#!)(%'#($'#(#'#(\"'#&'#=.\" 7ĝ"),i("%;Ɓ/:#;Ð/1$;ȝ/($8#:ğ#!!)(#'#(\"'#&'#"),i("<%;ŷ/' 8!:ġ!! )=.\" 7Ġ"),i('<%;Ò/2#;Ó/)$8":Ģ""! )("\'#&\'#=." 7ć'),i('<%;Ȍ/1#;ȝ/($8":¬"!!)("\'#&\'#=." 7ģ'),i("%;Õ/B#;ȝ/9$$;Ô0#*;Ô&/)$8#:Ĥ#\"\" )(#'#(\"'#&'#"),i("%;Ɓ/:#;Õ/1$;ȝ/($8#:U#!!)(#'#(\"'#&'#"),i("<%;ſ/C#;_/:$;ȝ/1$;ƀ/($8$:Ħ$!\")($'#(#'#(\"'#&'#=.\" 7ĥ"),i('<;=." 7Ü'),i('<%;Ƶ/;#;ȝ/2$;Ȍ/)$8#:Ĩ#"" )(#\'#("\'#&\'#=." 7ħ'),i("<%;Ù.) &;Ǘ.# &;ǁ/' 8!:¬!! )=.\" 7ĩ"),i('<%;ȇ/@#;ȝ/7$;Ú." &"/)$8#:ī#"" )(#\'#("\'#&\'#=." 7Ī'),i('%;ƚ/1#;ȝ/($8":Ĭ"!!)("\'#&\'#'),i("<%;Ü/#;Ý.\" &\"/|$;¬/s$;ȝ/j$;Þ/a$;¡.\" &\"/S$;.\" &\"/E$;ȝ/<$;.\" &\"/.$8):Į)'('&$#\" )()'#(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7ĭ"),i('<%;ȉ/1#;ȝ/($8":¬"!!)("\'#&\'#=." 7į'),i("<%;ǩ/C#;ȝ/:$;Ä/1$;ȝ/($8$:ı$!!)($'#(#'#(\"'#&'#=.\" 7İ"),i("<%;ǿ/C#;ȝ/:$;ß/1$;ȝ/($8$:ĳ$!!)($'#(#'#(\"'#&'#=.\" 7Ĳ"),i('%;á/9#$;à0#*;à&/)$8":Ĥ""! )("\'#&\'#'),i("%;ȝ/:#;Ɓ/1$;á/($8#:ğ#! )(#'#(\"'#&'#"),i("<%;š/M#;ȝ/D$;Ƌ/;$;&/2$;ȝ/)$8%:ĵ%\"$!)(%'#($'#(#'#(\"'#&'#=.\" 7Ĵ"),i('<%;ã/h#;¬/_$;ȝ/V$;¡." &"/H$;." &"/:$;." &"/,$8&:ķ&%%$"! )(&\'#(%\'#($\'#(#\'#("\'#&\'#=." 7Ķ'),i("<%;Ƹ/C#;ȝ/:$;ǈ/1$;ȝ/($8$:¬$!#)($'#(#'#(\"'#&'#=.\" 7ĸ"),i('<;æ.5 &;ç./ &;è.) &;é.# &;ê=." 7Ĺ'),i('%;Ư/1#;ȝ/($8":¬"!!)("\'#&\'#'),i("%%<%;å/>#;Ǒ./ &;Ȇ.) &;ȍ.# &;Ȏ/#$+\")(\"'#&'#=.##&&!&'#/1#;ë/($8\":ğ\"! )(\"'#&'#"),i("%%<%;å/>#;Ȁ./ &;Ȇ.) &;ȍ.# &;Ȏ/#$+\")(\"'#&'#=.##&&!&'#/1#;Ħ/($8\":ğ\"! )(\"'#&'#"),i("%%<%;å/>#;Ȁ./ &;Ǒ.) &;ȍ.# &;Ȏ/#$+\")(\"'#&'#=.##&&!&'#/1#;Ī/($8\":ğ\"! )(\"'#&'#"),i("%%<%;å/>#;Ȁ./ &;Ǒ.) &;Ȇ.# &;Ȏ/#$+\")(\"'#&'#=.##&&!&'#/1#;Ĺ/($8\":ğ\"! )(\"'#&'#"),i("%%<%;å/>#;Ȁ./ &;Ǒ.) &;Ȇ.# &;ȍ/#$+\")(\"'#&'#=.##&&!&'#/1#;ļ/($8\":ğ\"! )(\"'#&'#"),i("<%;ì/T#;î.\" &\"/F$;ş/=$;ȝ/4$;ï/+$8%:Ļ%$$#\" )(%'#($'#(#'#(\"'#&'#=.\" 7ĺ"),i("%;å/J#;í.\" &\"/<$;Ȁ/3$;ȝ/*$8$:ļ$##\"!)($'#(#'#(\"'#&'#"),i('%;Ȃ.# &;ȁ/1#;ȝ/($8":Ľ"!!)("\'#&\'#'),i("<%;Ǎ/N#;ȝ/E$;=/<$;ǃ/3$;ȝ/*$8%:Ŀ%#$\"!)(%'#($'#(#'#(\"'#&'#=.\" 7ľ"),i(";ð.# &;ĥ"),i("<%;ſ/Z#;ò/Q$$;ô0#*;ô&/A$;ƀ/8$;ñ.\" &\"/*$8%:Ł%##\" )(%'#($'#(#'#(\"'#&'#=.\" 7ŀ"),i("%;Ȓ/D#;ȝ/;$;Ǽ/2$;ȝ/)$8$:ł$\"#!)($'#(#'#(\"'#&'#"),i("%;õ/B#;ȝ/9$$;ó0#*;ó&/)$8#:Ĥ#\"\" )(#'#(\"'#&'#"),i("%;Ɓ/:#;õ/1$;ȝ/($8#:$#!!)(#'#(\"'#&'#"),i('%;Ɓ/1#;Ć/($8":Ń"! )("\'#&\'#'),i('<%;ŷ/w#%%<;Ŷ=.##&&!&\'#/,#;ȝ/#$+")("\'#&\'#/O$;ö." &"/A$;ȝ/8$;÷." &"/*$8%:Ņ%#$" )(%\'#($\'#(#\'#("\'#&\'#=." 7ń'),i("<%;C/' 8!:Ň!! )=.\" 7ņ"),i("%;ù/B#$;ø0#*;ø&/2$;ȝ/)$8#:Ĥ#\"\"!)(#'#(\"'#&'#"),i('%;ȝ/1#;ù/($8":ğ"! )("\'#&\'#'),i('<%;ú." &"/2#;û/)$8":ŉ""! )("\'#&\'#=." 7ň'),i("<%;Ʈ/C#;ȝ/:$;ŷ/1$;ȝ/($8$:ŋ$!!)($'#(#'#(\"'#&'#=.\" 7Ŋ"),i(";ý.; &;Ā.5 &;ă./ &;Ą.) &;ą.# &;ü"),i("<%;Ę/' 8!:ō!! )=.\" 7Ō"),i('<%;þ/U#;đ." &"/G$;ē." &"/9$;ÿ." &"/+$8$:ŏ$$#"! )($\'#(#\'#("\'#&\'#=." 7Ŏ'),i("<%;Ǯ/D#;ȝ/;$;ǜ/2$;ȝ/)$8$:ő$\"#!)($'#(#'#(\"'#&'#=.\" 7Ő"),i('<%;ơ/1#;ȝ/($8":œ"!!)("\'#&\'#=." 7Œ'),i('%;ā/@#;ē." &"/2$;ȝ/)$8#:Ŕ#""!)(#\'#("\'#&\'#'),i("<%;Ă.# &;Ȉ/' 8!:P!! )=.\" 7ŕ"),i('<%;=." &"/2#;ǥ/)$8":ŗ""! )("\'#&\'#=." 7Ŗ'),i('<;ĕ=." 7Ř'),i('<%;Ƶ/G#;ȝ/>$;(.) &;N.# &;F/)$8#:Ś#"" )(#\'#("\'#&\'#=." 7ř'),i("<%;Đ/' 8!:Ŝ!! )=.\" 7ś"),i('<%;ć." &"/D#;ȝ/;$;Ĉ/2$;ȝ/)$8$:Ş$"#!)($\'#(#\'#("\'#&\'#=." 7ŝ'),i("<%;Ʈ/:#;ȝ/1$;ŷ/($8#:ŋ#! )(#'#(\"'#&'#=.\" 7ş"),i(";Ė.) &;Ċ.# &;ĉ"),i("<%;ĕ/' 8!:š!! )=.\" 7Š"),i("<%;ċ/J#;ȝ/A$;Ď/8$;ē.\" &\"/*$8$:ţ$##! )($'#(#'#(\"'#&'#=.\" 7Ţ"),i('%;Č.# &;č/1#;ȝ/($8":Ť"!!)("\'#&\'#'),i('<%;Ǯ/;#;ȝ/2$;ǜ/)$8#:ť#"" )(#\'#("\'#&\'#=." 7Ő'),i("<%;Ȉ/' 8!:ŧ!! )=.\" 7Ŧ"),i("<%;ſ/T#;ď/K$;ȝ/B$$;Ē0#*;Ē&/2$;ƀ/)$8%:Ĥ%\"#!)(%'#($'#(#'#(\"'#&'#=.\" 7Ũ"),i('<%;ŷ/O#;ȝ/F$;Đ." &"/8$;đ." &"/*$8$:Ū$##! )($\'#(#\'#("\'#&\'#=." 7ũ'),i("<%;ƪ/C#;ȝ/:$;ť/1$;ȝ/($8$:Ŭ$!!)($'#(#'#(\"'#&'#=.\" 7ū"),i('<%;Ɵ.# &;ƹ/1#;ȝ/($8":Ů"!!)("\'#&\'#=." 7ŭ'),i("%;Ɓ/:#;ď/1$;ȝ/($8#:ğ#!!)(#'#(\"'#&'#"),i("%;Ĕ/D#;ȝ/;$;Ä/2$;ȝ/)$8$:ů$\"#!)($'#(#'#(\"'#&'#"),i('<%;Ǩ/;#;ȝ/2$;ƭ/)$8#:ű#"" )(#\'#("\'#&\'#=." 7Ű'),i("%;Ʃ/;#;ȝ/2$;(/)$8#:Ų#\"\" )(#'#(\"'#&'#"),i("<%;ė/E#;Î/<$;Ę/3$;ȝ/*$8$:Ŵ$##\"!)($'#(#'#(\"'#&'#=.\" 7ų"),i("<%;Ǉ/D#;ȝ/;$;ǜ/2$;ȝ/)$8$:Ŷ$\"#!)($'#(#'#(\"'#&'#=.\" 7ŵ"),i('%;ę/F#;Ě." &"/8$;ģ." &"/*$8#:ŷ##"! )(#\'#("\'#&\'#'),i('<%;ǲ/;#;ȝ/2$;ū/)$8#:Ź#"" )(#\'#("\'#&\'#=." 7Ÿ'),i("%;Ĝ/B#;ȝ/9$$;ě0#*;ě&/)$8#:ź#\"\" )(#'#(\"'#&'#"),i('%;Ĝ/1#;ȝ/($8":Ĭ"!!)("\'#&\'#'),i('<;ĝ.# &;Ģ=." 7Ż'),i("%;Ǩ/T#;ȝ/K$;Ƹ.# &;ȉ/<$;ȝ/3$;Ğ/*$8%:ż%#$\" )(%'#($'#(#'#(\"'#&'#"),i('<;ğ.) &;Ġ.# &;ġ=." 7Ž'),i("%;ǿ/A#;ȝ/8$;ǥ.# &;Ƶ/)$8#:ž#\"\" )(#'#(\"'#&'#"),i("%;Ʀ.# &;Ǹ/' 8!:ſ!! )"),i("%;Ǣ/;#;ȝ/2$;Ɨ/)$8#:ƀ#\"\" )(#'#(\"'#&'#"),i("%;Ǡ/;#;ȝ/2$;ŷ/)$8#:Ɓ#\"\" )(#'#(\"'#&'#"),i('<%;=." &"/J#;ƶ/A$;ȝ/8$;Ĥ." &"/*$8$:ƃ$##" )($\'#(#\'#("\'#&\'#=." 7Ƃ'),i("%;Ǔ/J#;ȝ/A$;Ʒ.# &;Ǐ/2$;ȝ/)$8$:Ƅ$\"#!)($'#(#'#(\"'#&'#"),i("%;Ļ/' 8!:ƅ!! )"),i("<%;ħ/c#;î.\" &\"/U$;ŧ/L$;ȝ/C$;ĩ/:$;¡.\" &\"/,$8&:Ƈ&%%$#! )(&'#(%'#($'#(#'#(\"'#&'#=.\" 7Ɔ"),i("%;å/J#;Ĩ.\" &\"/<$;Ǒ/3$;ȝ/*$8$:ƈ$##\"!)($'#(#'#(\"'#&'#"),i('%;Ȉ/1#;ȝ/($8":Ɖ"!!)("\'#&\'#'),i("<%;Ǩ/N#;ȝ/E$;ŷ/<$;ȝ/3$;Ď/*$8%:Ƌ%#$\" )(%'#($'#(#'#(\"'#&'#=.\" 7Ɗ"),i("<%;ī/¡#;î.\" &\"/$;Ũ/$;ȝ/$;Ĭ/x$;Ǩ/o$;ȝ/f$;ŷ/]$;ȝ/T$;Ĵ.\" &\"/F$;ĵ.\" &\"/8$;Ķ//$8,:ƍ,(+*)'$\"! )(,'#(+'#(*'#()'#(('#(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7ƌ"),i("%;å/J#;í.\" &\"/<$;Ȇ/3$;ȝ/*$8$:Ǝ$##\"!)($'#(#'#(\"'#&'#"),i('<%;ĭ." &"/2#;į/)$8":Ɛ""! )("\'#&\'#=." 7Ə'),i('%;Ƣ.) &;ƙ.# &;Į/1#;ȝ/($8":Ƒ"!!)("\'#&\'#'),i("%;ǖ/;#;ȝ/2$;Ǧ/)$8#:ƒ#\"\" )(#'#(\"'#&'#"),i('<;İ.# &;ı=." 7Ɠ'),i('%;Ƹ.# &;Ǖ/1#;ȝ/($8":Ɣ"!!)("\'#&\'#'),i('%;ȉ/@#;ȝ/7$;Ĳ." &"/)$8#:ƕ#"" )(#\'#("\'#&\'#'),i("%;Ǧ/;#;ȝ/2$;ĳ/)$8#:Ɩ#\"\" )(#'#(\"'#&'#"),i("%;Ð/B#;ȝ/9$$;Ï0#*;Ï&/)$8#:Ĥ#\"\" )(#'#(\"'#&'#"),i("%;ǆ/c#;ȝ/Z$;ƽ/Q$;ȝ/H$;ǻ.) &3Ɨ\"\"5)7Ƙ/3$;ȝ/*$8&:ƙ&#%#!)(&'#(%'#($'#(#'#(\"'#&'#"),i("<%;ȏ/D#;ȝ/;$;%/2$;ȝ/)$8$:ƚ$\"#!)($'#(#'#(\"'#&'#=.\" 75"),i("<%;ƣ/W#;ȝ/N$;ķ/E$;ȝ/<$;ƿ/3$;ȝ/*$8&:Ɯ&#%#!)(&'#(%'#($'#(#'#(\"'#&'#=.\" 7ƛ"),i("%$;ĸ/&#0#*;ĸ&&&#/' 8!:õ!! )"),i("%;e/:#;ȝ/1$;#/($8#:\"#!\")(#'#(\"'#&'#"),i("<%;ĺ/T#;î.\" &\"/F$;ũ/=$;ȝ/4$;Ļ/+$8%:ƞ%$$#\" )(%'#($'#(#'#(\"'#&'#=.\" 7Ɲ"),i("%;å/J#;í.\" &\"/<$;ȍ/3$;ȝ/*$8$:Ɵ$##\"!)($'#(#'#(\"'#&'#"),i("%;ƞ/D#;ȝ/;$;/2$;ȝ/)$8$:Ģ$\"#!)($'#(#'#(\"'#&'#"),i("<%;Ľ/f#;î.\" &\"/X$;ş/O$;ȝ/F$;Ȋ/=$;ȝ/4$;ľ/+$8':ơ'$&%$ )(''#(&'#(%'#($'#(#'#(\"'#&'#=.\" 7Ơ"),i("%;å/N#;Ȏ/E$;ȝ/<$;Ȁ/3$;ȝ/*$8%:Ƣ%#$#!)(%'#($'#(#'#(\"'#&'#"),i('%;Ÿ/@#;ȝ/7$;Ŀ." &"/)$8#:ƣ#"" )(#\'#("\'#&\'#'),i("<%;ſ/C#;ŀ/:$;ȝ/1$;ƀ/($8$:ƥ$!\")($'#(#'#(\"'#&'#=.\" 7Ƥ"),i(";Ł.# &;ł"),i("%%<%;ŷ/;#;ȝ/2$;C.# &;ù/#$+#)(#'#(\"'#&'#=.##&&!&'#/1#;_/($8\":õ\"! )(\"'#&'#"),i("%;ò/' 8!:õ!! )"),i('<%;ń/;#;ş/2$;ȝ/)$8#:Ƨ#""!)(#\'#("\'#&\'#=." 7Ʀ'),i("<%;Ƽ/J#;ȝ/A$;Ņ/8$;ņ.\" &\"/*$8$:Ʃ$##! )($'#(#'#(\"'#&'#=.\" 7ƨ"),i('<%;Ȁ./ &;Ǒ.) &;Ȇ.# &;ȍ/1#;ȝ/($8":P"!!)("\'#&\'#=." 7ƪ'),i("%;Ň/' 8!:ƫ!! )"),i("<%;Ǎ/D#;ȝ/;$;ǃ/2$;ȝ/)$8$:ƭ$\"#!)($'#(#'#(\"'#&'#=.\" 7Ƭ"),i('<;ƈ./ &;Ɗ.) &;Ɖ.# &;==." 7Ʈ'),i("<%;Ŋ/' 8!:ư!! )=.\" 7Ư"),i(";ŋ. &;<.} &;Ŏ.w &;ŏ.q &;Ő.k &;Ō.e &;ō._ &;ő.Y &;Œ.S &;œ.M &;Ŕ.G &;ŗ.A &;ŕ.; &;Ř.5 &;Ŗ./ &;ś.) &;Ś.# &;ř"),i('<%;ƍ/,#;ƍ/#$+")("\'#&\'#=." 7Ʊ'),i('<;Ɖ=." 7Ʋ'),i('<;Ɗ=." 7Ƴ'),i('<;ƃ=." 7ƴ'),i('<;Ɣ=." 7Ƶ'),i('<;Ǝ=." 7ƶ'),i('<%;Ə/,#;Ə/#$+")("\'#&\'#=." 7Ʒ'),i('<%;Ɛ/,#;Ɛ/#$+")("\'#&\'#=." 7Ƹ'),i('<;ƌ=." 7ƹ'),i('<;ƍ=." 7ƺ'),i('<;Ə=." 7ƻ'),i('<;Ɛ=." 7Ƽ'),i('<%;Ə/,#;Ƌ/#$+")("\'#&\'#=." 7ƽ'),i('<%;Ɛ/,#;Ƌ/#$+")("\'#&\'#=." 7ƾ'),i('<%;Ƌ/1#;Ƌ." &"/#$+")("\'#&\'#=." 7ƿ'),i('<%;Ƒ/,#;Ƌ/#$+")("\'#&\'#.6 &%;Ə/,#;Ɛ/#$+")("\'#&\'#=." 7ǀ'),i(";Ŝ.# &;ŝ"),i('<%;Ǚ/@#;ȝ/7$;=." &"/)$8#:K#"" )(#\'#("\'#&\'#=." 7ǁ'),i("%;ǐ.5 &;Ǟ./ &;Ǌ.) &;Ǡ.# &;ǳ/' 8!:ǂ!! )"),i("<%;ŷ/' 8!:Ǆ!! )=.\" 7ǃ"),i('<%;Š." &"/2#;ŷ/)$8":ǆ""! )("\'#&\'#=." 7ǅ'),i('%;ŷ/2#;Ƃ/)$8":Ǉ""! )("\'#&\'#'),i('<%;ţ.) &;Ť.# &;Ţ/2#;ŷ/)$8":ǉ""! )("\'#&\'#=." 7ǈ'),i("%;ȝ/& 8!:Ǌ! )"),i('%;Š/2#;Ť/)$8":ǋ""! )("\'#&\'#'),i('%;ŷ/2#;Ƃ/)$8":o""! )("\'#&\'#'),i("<%;Ÿ/' 8!:Ǎ!! )=.\" 7ǌ"),i("<%;ŷ/' 8!:Ǐ!! )=.\" 7ǎ"),i('<%;Š." &"/2#;ŷ/)$8":Ǒ""! )("\'#&\'#=." 7ǐ'),i('<%;Š." &"/2#;ŷ/)$8":Ǔ""! )("\'#&\'#=." 7ǒ'),i('<%;Š." &"/2#;ŷ/)$8":Ǖ""! )("\'#&\'#=." 7ǔ'),i('<%;Š." &"/2#;ŷ/)$8":Ǘ""! )("\'#&\'#=." 7ǖ'),i('<%;Ŭ.# &;ş/1#;ȝ/($8":."!!)("\'#&\'#=." 7ǘ'),i("%;ŷ/;#;ȝ/2$;Î/)$8#:Ǚ#\"\" )(#'#(\"'#&'#"),i("<%;ŷ/' 8!:Ǜ!! )=.\" 7ǚ"),i("<%;ŷ/' 8!:ǝ!! )=.\" 7ǜ"),i('<%;Ű/=#%<;Ŷ=.##&&!&\'#/($8":ǟ"!!)("\'#&\'#.Å &%;ű/=#%<;Ŷ=.##&&!&\'#/($8":Ǡ"!!)("\'#&\'#. &%;ų/=#%<;Ŷ=.##&&!&\'#/($8":ǡ"!!)("\'#&\'#.q &%;Ŵ/=#%<;Ŷ=.##&&!&\'#/($8":Ǣ"!!)("\'#&\'#.G &%;ŵ/=#%<;Ŷ=.##&&!&\'#/($8":ǣ"!!)("\'#&\'#=." 7Ǟ'),i('<%%3ǥ""5!7Ǧ." &"/F#3ǧ""5#7Ǩ." &"/2$3ǩ""5$7Ǫ/#$+#)(#\'#("\'#&\'#.k &%3ǫ""5$7Ǭ.5 &3ǭ""5&7Ǯ.) &3ǯ""5$7ǰ." &"/2#3Ǳ""5$7ǲ/#$+")("\'#&\'#.) &3ǳ""5$7Ǵ/\' 8!:P!! )=." 7Ǥ'),i('<%;Ų.5 &3Ƕ""5%7Ƿ.) &3Ǹ""5$7ǹ/\' 8!:P!! )=." 7ǵ'),i('<%3ǻ""5&7Ǽ/i#%$4ǽ""5!7Ǿ/,#0)*4ǽ""5!7Ǿ&&&#/2#3ǿ""5)7Ȁ/#$+")("\'#&\'#." &"/)$8":ȁ""! )("\'#&\'#=." 7Ǻ'),i('<%3ȃ""5\'7Ȅ. &3ȅ""5\'7Ȇ.} &3ȇ""5\'7Ȉ.q &%3ȉ""5$7Ȋ/7#3ȋ""5$7Ȍ." &"/#$+")("\'#&\'#.G &%3ȋ""5$7Ȍ/7#3ȍ""5%7Ȏ." &"/#$+")("\'#&\'#/\' 8!:P!! )=." 7Ȃ'),i('<%%3Ȑ""5#7ȑ/V#2Ȓ""6Ȓ7ȓ.A &2Ȕ""6Ȕ7ȕ.5 &2Ȗ""6Ȗ7ȗ.) &3Ș""5$7ș/#$+")("\'#&\'#.k &%3Ț""5#7ț.A &3ǭ""5&7Ǯ.5 &3Ȝ""5%7ȝ.) &3ǫ""5$7Ǭ." &"/2#3Ȑ""5#7ȑ/#$+")("\'#&\'#/\' 8!:P!! )=." 7ȏ'),i('<%3ȟ""5$7Ƞ/\' 8!:P!! )=." 7Ȟ'),i('4ȡ""5!7Ȣ'),i(";Ź.5 &;ż./ &;ź.) &;Ż.# &;Ÿ"),i("%%<;ů.) &;ȓ.# &;W=.##&&!&'#/>#$;Ŷ/&#0#*;Ŷ&&&#/($8\":ȣ\"! )(\"'#&'#"),i('%;Ž/ò#$%%<%$4Ȥ""5!7ȥ0)*4Ȥ""5!7ȥ&/2#2Ȧ""6Ȧ7ȧ/#$+")("\'#&\'#=.##&&!&\'#/2#4Ȩ""5!7ȩ/#$+")("\'#&\'#/w#0t*%%<%$4Ȥ""5!7ȥ0)*4Ȥ""5!7ȥ&/2#2Ȧ""6Ȧ7ȧ/#$+")("\'#&\'#=.##&&!&\'#/2#4Ȩ""5!7ȩ/#$+")("\'#&\'#&&&#/:$;ȝ/1$;ž/($8$:M$!")($\'#(#\'#("\'#&\'#'),i('%2Ȫ""6Ȫ7ȫ/q#$2Ȭ""6Ȭ7ȭ.) &4Ȯ""5!7ȯ/8#05*2Ȭ""6Ȭ7ȭ.) &4Ȯ""5!7ȯ&&&#/7$2Ȫ""6Ȫ7ȫ/($8#:Ȱ#!!)(#\'#("\'#&\'#'),i('%2ȱ""6ȱ7Ȳ/q#$2b""6b7c.) &4d""5!7e/8#05*2b""6b7c.) &4d""5!7e&&&#/7$2ȱ""6ȱ7Ȳ/($8#:ȳ#!!)(#\'#("\'#&\'#'),i('%2ȴ""6ȴ7ȵ/q#$2ȶ""6ȶ7ȷ.) &4ȸ""5!7ȹ/8#05*2ȶ""6ȶ7ȷ.) &4ȸ""5!7ȹ&&&#/7$2ȴ""6ȴ7ȵ/($8#:Ⱥ#!!)(#\'#("\'#&\'#'),i('<%2ȼ""6ȼ7Ƚ/1#;ȝ/($8":""!!)("\'#&\'#=." 7Ȼ'),i('<%2Ȧ""6Ȧ7ȧ/1#;ȝ/($8":""!!)("\'#&\'#=." 7Ⱦ'),i('<%2ɀ""6ɀ7Ɂ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ȿ'),i('<%2Ƀ""6Ƀ7Ʉ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɂ'),i('<%2Ɇ""6Ɇ7ɇ/1#;ȝ/($8":""!!)("\'#&\'#=." 7Ʌ'),i('<%2ɉ""6ɉ7Ɋ/1#;ȝ/($8":""!!)("\'#&\'#=." 7Ɉ'),i('<%2Ɍ""6Ɍ7ɍ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɋ'),i('<%2ɏ""6ɏ7ɐ/1#;ȝ/($8":""!!)("\'#&\'#=." 7Ɏ'),i('<%2ȱ""6ȱ7Ȳ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɑ'),i('<%2Ȫ""6Ȫ7ȫ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɒ'),i('<%2ȴ""6ȴ7ɔ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɓ'),i('<%2ɖ""6ɖ7ɗ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɕ'),i('<%2ə""6ə7ɚ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɘ'),i('<%2ɜ""6ɜ7ɝ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɛ'),i('<%2ɞ""6ɞ7ɟ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ƿ'),i('<%2ɡ""6ɡ7ɢ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɠ'),i('<%2ɤ""6ɤ7ɥ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɣ'),i('<%2ɦ""6ɦ7ɧ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ƶ'),i('<%2ɨ""6ɨ7ɩ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ƻ'),i('<%2ɪ""6ɪ7ɫ/1#;ȝ/($8":""!!)("\'#&\'#=." 7Ƽ'),i('<%2ɭ""6ɭ7ɮ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɬ'),i('<%2ɰ""6ɰ7ɱ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɯ'),i('<%2""67/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɲ'),i('<%2ɴ""6ɴ7ɵ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɳ'),i('<%2ɷ""6ɷ7ɸ/1#;ȝ/($8":""!!)("\'#&\'#=." 7ɶ'),i('%3ɹ""5%7ɺ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ɻ""5&7ɼ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ɽ""5#7ɾ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ɿ""5%7ʀ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʁ""5#7ʂ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʃ""5%7ʄ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3ʅ\"\"5'7ʆ/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3ʇ""5#7ʈ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʉ""5"7ʊ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʋ""5#7ʌ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʍ""5&7ʎ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʏ""5-7ʐ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʑ""5&7ʒ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʓ""5%7ʔ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3ʕ\"\"5'7ʖ/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3ʗ""5"7ʘ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3ʙ\"\"5'7ʚ/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3ʛ""5$7ʜ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʝ""5$7ʞ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʟ""5%7ʠ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3ʡ\"\"5'7ʢ/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3ʣ""5&7ʤ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʥ""5&7ʦ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʧ""5(7ʨ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʩ""5*7ʪ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʫ""5&7ʬ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʭ""5%7ʮ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʯ""5,7ʰ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʱ""5,7ʲ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʳ""517ʴ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʵ""5(7ʶ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3ʷ\"\"5'7ʸ/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3ʹ""5*7ʺ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʻ""5(7ʼ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʽ""5&7ʾ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ʿ""5$7ˀ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˁ""5&7˂/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˃""5(7˄/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˅""5$7ˆ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˇ""5$7ˈ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˉ""5$7ˊ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˋ""5#7ˌ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˍ""5&7ˎ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˏ""5&7ː/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˑ""5)7˒/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˓""5&7˔/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3˕\"\"5'7˖/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3˗""5$7˘/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˙""5#7˚/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3˛\"\"5'7˜/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3˝""5$7˞/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˟""5$7ˠ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˡ""5$7ˢ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ˣ""5%7ˤ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˥""5&7˦/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˧""5"7˨/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˩""5&7˪/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˫""5)7ˬ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˭""5"7ˮ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˯""5%7˰/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3˱\"\"5'7˲/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3˳""5)7˴/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˵""5%7˶/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˷""5&7˸/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3˹\"\"5'7˺/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3˻""5)7˼/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˽""5$7˾/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3I""5"7J/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3˿""5&7̀/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3́""5$7̂/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̃""5#7̄/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̅""5$7̆/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̇""5$7̈/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̉""5%7̊/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̋""5%7̌/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3̍\"\"5'7̎/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3̏""5"7̐/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3N""5#7O/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3̑\"\"5'7̒/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3̓""5$7̔/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̕""5"7̖/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̗""5&7̘/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̙""5"7̚/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̛""5"7̜/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̝""5%7̞/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̟""5%7̠/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̡""5$7̢/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̣""5&7̤/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3̥\"\"5'7̦/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3̧""5%7̨/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̩""5%7̪/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̫""5)7̬/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̭""5*7̮/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̯""5&7̰/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3̱\"\"5'7̲/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i("%3̳\"\"5'7̴/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3̵""5&7̶/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3̷\"\"5'7̸/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3̹""5(7̺/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̻""5%7̼/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̽""5(7̾/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̿""5#7̀/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3́""5%7͂/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3̓""5)7̈́/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ͅ""5&7͆/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͇""5#7͈/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͉""5%7͊/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͋""5$7͌/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͍""5)7͎/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͏""5$7͐/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͑""5"7͒/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͓""5+7͔/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3͕\"\"5'7͖/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3͗""5%7͘/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͙""5&7͚/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͛""5&7͜/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͝""5%7͞/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͟""5&7͠/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3͡""5&7͢/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ͣ""5$7ͤ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3ͥ\"\"5'7ͦ/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i('%3ͧ""5$7ͨ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ͩ""5%7ͪ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i('%3ͫ""5$7ͬ/8#%<;Ŷ=.##&&!&\'#/#$+")("\'#&\'#'),i("%3ͭ\"\"5'7ͮ/8#%<;Ŷ=.##&&!&'#/#$+\")(\"'#&'#"),i("%;Ȕ/' 8!:ͯ!! )"),i(";Ɩ.̅ &;Ɨ.˿ &;Ƙ.˹ &;ƙ.˳ &;ƚ.˭ &;ƛ.˧ &;Ɯ.ˡ &;Ɲ.˛ &;ƞ.˕ &;Ɵ.ˏ &;Ơ.ˉ &;ơ.˃ &;Ƣ.ʽ &;ƣ.ʷ &;Ƥ.ʱ &;ƥ.ʫ &;Ʀ.ʥ &;Ƨ.ʟ &;ƨ.ʙ &;Ʃ.ʓ &;ƪ.ʍ &;ƫ.ʇ &;Ƭ.ʁ &;ƭ.ɻ &;Ʈ.ɵ &;Ư.ɯ &;ư.ɩ &;Ʊ.ɣ &;Ʋ.ɝ &;Ƴ.ɗ &;ƴ.ɑ &;Ƶ.ɋ &;ƶ.Ʌ &;Ʒ.ȿ &;Ƹ.ȹ &;ƹ.ȳ &;ƺ.ȭ &;ƻ.ȧ &;Ƽ.ȡ &;ƽ.ț &;ƾ.ȕ &;ƿ.ȏ &;ǀ.ȉ &;ǁ.ȃ &;ǂ.ǽ &;ǃ.Ƿ &;Ǆ.Ǳ &;ǅ.ǫ &;ǆ.ǥ &;Ǉ.ǟ &;ǈ.Ǚ &;ǉ.Ǔ &;Ǌ.Ǎ &;ǋ.Ǉ &;ǌ.ǁ &;Ǎ.ƻ &;ǎ.Ƶ &;Ǐ.Ư &;ǐ.Ʃ &;Ǒ.ƣ &;ǒ.Ɲ &;Ǔ.Ɨ &;ǔ.Ƒ &;Ǖ.Ƌ &;ǖ.ƅ &;Ǘ.ſ &;ǘ.Ź &;Ǚ.ų &;ǚ.ŭ &;Ǜ.ŧ &;ǜ.š &;ǝ.ś &;Ǟ.ŕ &;ǟ.ŏ &;Ǡ.ŉ &;ǡ.Ń &;Ǣ.Ľ &;ǣ.ķ &;Ǥ.ı &;ǥ.ī &;Ǧ.ĥ &;ǧ.ğ &;Ǩ.ę &;ǩ.ē &;Ǫ.č &;ǫ.ć &;Ǭ.ā &;ǭ.û &;Ǯ.õ &;ǯ.ï &;ǰ.é &;Ǳ.ã &;ǲ.Ý &;ǳ.× &;Ǵ.Ñ &;ǵ.Ë &;Ƕ.Å &;Ƿ.¿ &;Ǹ.¹ &;ǹ.³ &;Ǻ.­ &;ǻ.§ &;Ǽ.¡ &;ǽ. &;Ǿ. &;ǿ. &;Ȁ. &;ȁ. &;Ȃ.} &;ȃ.w &;Ȅ.q &;ȅ.k &;Ȇ.e &;ȇ._ &;Ȉ.Y &;ȉ.S &;Ȋ.M &;ȋ.G &;Ȍ.A &;ȍ.; &;Ȏ.5 &;ȏ./ &;Ȑ.) &;ȑ.# &;Ȓ"),i(";Ȗ.. &%;ȗ/& 8!:Ͱ! )"),i('<%2Ͳ""6Ͳ7ͳ/#$%%<4ʹ""5!7͵=.##&&!&\'#/1#1""5!7Ͷ/#$+")("\'#&\'#0M*%%<4ʹ""5!7͵=.##&&!&\'#/1#1""5!7Ͷ/#$+")("\'#&\'#&/#$+")("\'#&\'#=." 7ͱ'),i("<%;Ș/5#;Ȝ/,$;ș/#$+#)(#'#(\"'#&'#=.\" 7ͷ"),i('2͸""6͸7͹'),i('2ͺ""6ͺ7ͻ'),i('$%%<;ș.# &;Ș=.##&&!&\'#/1#1""5!7Ͷ/#$+")("\'#&\'#/P#0M*%%<;ș.# &;Ș=.##&&!&\'#/1#1""5!7Ͷ/#$+")("\'#&\'#&&&#'),i(";Ț.# &;ȗ"),i('%;ț/K#$4ͼ""5!7ͽ.# &;ț0/*4ͼ""5!7ͽ.# &;ț&/#$+")("\'#&\'#'),i('<%$4ͼ""5!7ͽ.# &;ȕ0/*4ͼ""5!7ͽ.# &;ȕ&/\' 8!:(!! )=." 7;'),i('2Ϳ""6Ϳ7΀')],r=0,s=0,t=[{
line:1,column:1}],u=0,v=[],w=0,x={},y=["start","stmt_list","semi_optional","semi_required","stmt_list_tail","expression","expression_types","expression_concat","expression_wrapped","expression_value","expression_unary","expression_cast","type_alias","expression_exists","expression_exists_ne","expression_case","expression_case_when","expression_case_else","expression_raise","expression_raise_args","raise_args_ignore","raise_args_message","expression_node","expression_collate","expression_compare","expression_escape","expression_null","expression_null_nodes","expression_isnt","expression_is_not","expression_is_not_join","expression_between","expression_in","expression_in_target","expression_list_or_select","type_definition","type_definition_args","definition_args_loop","literal_value","literal_null","literal_date","literal_string","literal_string_single","literal_string_schar","literal_blob","number_sign","literal_number_signed","literal_number","literal_number_decimal","number_decimal_node","number_decimal_full","number_decimal_fraction","number_decimal_exponent","literal_number_hex","number_hex","number_digit","bind_parameter","bind_parameter_numbered","bind_parameter_named","bind_parameter_tcl","tcl_suffix","operation_binary","binary_loop_concat","expression_list","expression_list_rest","function_call","function_call_args","args_list_distinct","error_message","stmt","stmt_modifier","modifier_query","stmt_nodes","stmt_transaction","stmt_commit","stmt_begin","commit_transaction","stmt_begin_modifier","stmt_rollback","rollback_savepoint","savepoint_alt","stmt_savepoint","stmt_release","stmt_alter","alter_start","alter_action","alter_action_rename","alter_action_add","action_add_modifier","stmt_crud","stmt_core_with","clause_with","clause_with_recursive","clause_with_tables","clause_with_loop","expression_cte","select_alias","select_wrapped","stmt_sqlite","stmt_detach","stmt_vacuum","stmt_analyze","analyze_arg","stmt_reindex","reindex_arg","stmt_pragma","pragma_expression","pragma_value","pragma_value_literal","pragma_value_bool","pragma_value_name","stmt_crud_types","stmt_select","stmt_core_order","stmt_core_limit","stmt_core_limit_offset","limit_offset_variant","limit_offset_variant_name","select_loop","select_loop_union","select_parts","select_parts_core","select_core_select","select_modifier","select_modifier_distinct","select_modifier_all","select_target","select_target_loop","select_core_from","stmt_core_where","select_core_group","select_core_having","select_node","select_node_star","select_node_star_qualified","select_node_aliased","select_source","select_source_loop","source_loop_tail","table_or_sub","table_qualified","table_qualified_id","table_or_sub_index_node","index_node_indexed","index_node_none","table_or_sub_sub","table_or_sub_select","alias","select_join_loop","select_join_clause","join_operator","join_operator_natural","join_operator_types","operator_types_hand","types_hand_outer","operator_types_misc","join_condition","join_condition_on","join_condition_using","select_parts_values","stmt_core_order_list","stmt_core_order_list_loop","stmt_core_order_list_item","select_star","stmt_fallback_types","stmt_insert","insert_keyword","insert_keyword_ins","insert_keyword_repl","insert_keyword_mod","insert_target","insert_into","insert_into_start","insert_results","loop_columns","loop_column_tail","loop_name","insert_value","insert_value_start","insert_values_list","insert_values_loop","insert_values","insert_select","insert_default","operator_compound","compound_union","compound_union_all","stmt_update","update_start","update_fallback","update_set","update_columns","update_columns_tail","update_column","stmt_delete","delete_start","stmt_create","create_start","create_table_only","create_index_only","create_trigger_only","create_view_only","create_virtual_only","create_table","create_table_start","create_core_tmp","create_core_ine","create_table_source","table_source_def","source_def_rowid","source_def_loop","source_def_tail","source_tbl_loop","source_def_column","column_type","column_constraints","column_constraint_tail","column_constraint","column_constraint_name","column_constraint_types","column_constraint_foreign","column_constraint_primary","col_primary_start","col_primary_auto","column_constraint_null","constraint_null_types","constraint_null_value","column_constraint_check","column_constraint_default","column_constraint_collate","table_constraint","table_constraint_name","table_constraint_types","table_constraint_check","table_constraint_primary","primary_start","primary_start_normal","primary_start_unique","primary_columns","primary_column","column_collate","primary_column_dir","primary_column_tail","primary_conflict","primary_conflict_start","constraint_check","table_constraint_foreign","foreign_start","foreign_clause","foreign_references","foreign_actions","foreign_actions_tail","foreign_action","foreign_action_on","action_on_action","on_action_set","on_action_cascade","on_action_none","foreign_action_match","foreign_deferrable","deferrable_initially","table_source_select","create_index","create_index_start","index_unique","index_on","create_trigger","create_trigger_start","trigger_conditions","trigger_apply_mods","trigger_apply_instead","trigger_do","trigger_do_on","trigger_do_update","do_update_of","do_update_columns","trigger_foreach","trigger_when","trigger_action","action_loop","action_loop_stmt","create_view","create_view_start","create_as_select","create_virtual","create_virtual_start","virtual_module","virtual_args","virtual_arg_types","virtual_arg_list","virtual_arg_def","stmt_drop","drop_start","drop_types","drop_conditions","drop_ie","operator_unary","operator_binary","binary_nodes","binary_concat","binary_plus","binary_minus","binary_multiply","binary_divide","binary_mod","binary_left","binary_right","binary_and","binary_or","binary_lt","binary_gt","binary_lte","binary_gte","binary_equal","binary_notequal","binary_lang","binary_lang_isnt","binary_lang_misc","id_database","id_table","id_table_qualified","id_column","column_unqualified","column_qualifiers","id_column_qualified","id_collation","id_savepoint","id_index","id_trigger","id_view","id_pragma","id_cte","id_table_expression","id_constraint_table","id_constraint_column","datatype_types","datatype_text","datatype_real","datatype_real_double","datatype_numeric","datatype_integer","datatype_none","name_char","name","name_unquoted","name_bracketed","name_dblquoted","name_sglquoted","name_backticked","sym_bopen","sym_bclose","sym_popen","sym_pclose","sym_comma","sym_dot","sym_star","sym_quest","sym_sglquote","sym_dblquote","sym_backtick","sym_tilde","sym_plus","sym_minus","sym_equal","sym_amp","sym_pipe","sym_mod","sym_lt","sym_gt","sym_excl","sym_semi","sym_colon","sym_fslash","sym_bslash","ABORT","ACTION","ADD","AFTER","ALL","ALTER","ANALYZE","AND","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FOR","FOREIGN","FROM","FULL","GLOB","GROUP","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LEFT","LIKE","LIMIT","MATCH","NATURAL","NO","NOT","NOTNULL","NULL","OF","OFFSET","ON","OR","ORDER","OUTER","PLAN","PRAGMA","PRIMARY","QUERY","RAISE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RIGHT","ROLLBACK","ROW","ROWID","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TO","TRANSACTION","TRIGGER","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WITH","WITHOUT","reserved_words","reserved_word_list","comment","comment_line","comment_block","comment_block_start","comment_block_end","comment_block_body","block_body_nodes","comment_block_feed","o","_TODO_"],z=[null,null,null,null,null,"Expression",null,"Logical Expression Group","Wrapped Expression",null,"Unary Expression","CAST Expression","Type Alias","EXISTS Expression","EXISTS Keyword","CASE Expression","WHEN Clause","ELSE Clause","RAISE Expression","RAISE Expression Arguments","IGNORE Keyword",null,null,"COLLATE Expression","Comparison Expression","ESCAPE Expression","NULL Expression","NULL Keyword","IS Keyword",null,null,"BETWEEN Expression","IN Expression",null,null,"Type Definition","Type Definition Arguments",null,null,"Null Literal","Date Literal","String Literal","Single-quoted String Literal",null,"Blob Literal","Number Sign",null,null,null,"Decimal Literal",null,null,"Decimal Literal Exponent","Hexidecimal Literal",null,null,"Bind Parameter","Numbered Bind Parameter","Named Bind Parameter","TCL Bind Parameter",null,"Binary Expression",null,"Expression List",null,"Function Call","Function Call Arguments",null,"Error Message","Statement","QUERY PLAN","QUERY PLAN Keyword",null,"Transaction","END Transaction Statement","BEGIN Transaction Statement",null,null,"ROLLBACK Statement","TO Clause",null,"SAVEPOINT Statement","RELEASE Statement","ALTER TABLE Statement","ALTER TABLE Keyword",null,"RENAME TO Keyword","ADD COLUMN Keyword",null,null,"WITH Clause",null,null,null,null,"Common Table Expression",null,null,null,"DETACH Statement","VACUUM Statement","ANALYZE Statement",null,"REINDEX Statement",null,"PRAGMA Statement",null,null,null,null,null,null,"SELECT Statement","ORDER BY Clause","LIMIT Clause","OFFSET Clause",null,null,null,"Union Operation",null,null,"SELECT Results Clause","SELECT Results Modifier",null,null,null,null,"FROM Clause","WHERE Clause","GROUP BY Clause","HAVING Clause",null,null,null,null,null,null,null,null,"Qualified Table","Qualified Table Identifier","Qualfied Table Index",null,null,"SELECT Source","Subquery","Alias",null,"JOIN Operation","JOIN Operator",null,null,null,null,null,"JOIN Constraint","Join ON Clause","Join USING Clause","VALUES Clause",null,null,"Ordering Expression","Star","Fallback Type","INSERT Statement",null,"INSERT Keyword","REPLACE Keyword","INSERT OR Modifier",null,"INTO Clause","INTO Keyword","VALUES Clause","Column List",null,"Column Name","VALUES Clause","VALUES Keyword",null,null,"Insert Values List","SELECT Results Clause","DEFAULT VALUES Clause","Compound Operator","UNION Operator",null,"UPDATE Statement","UPDATE Keyword","UPDATE OR Modifier","SET Clause",null,null,"Column Assignment","DELETE Statement","DELETE Keyword","CREATE Statement",null,null,null,null,null,null,"CREATE TABLE Statement",null,null,"IF NOT EXISTS Modifier",null,"Table Definition",null,null,null,null,"Column Definition","Column Datatype",null,null,"Column Constraint","Column Constraint Name",null,"FOREIGN KEY Column Constraint","PRIMARY KEY Column Constraint","PRIMARY KEY Keyword","AUTOINCREMENT Keyword",null,"UNIQUE Column Constraint","NULL Column Constraint","CHECK Column Constraint","DEFAULT Column Constraint","COLLATE Column Constraint","Table Constraint","Table Constraint Name",null,"CHECK Table Constraint","PRIMARY KEY Table Constraint",null,"PRIMARY KEY Keyword","UNIQUE Keyword","PRIMARY KEY Columns","Indexed Column","Column Collation","Column Direction",null,null,"ON CONFLICT Keyword",null,"FOREIGN KEY Table Constraint","FOREIGN KEY Keyword",null,"REFERENCES Clause",null,null,"FOREIGN KEY Action Clause",null,"FOREIGN KEY Action",null,null,null,null,"DEFERRABLE Clause",null,null,"CREATE INDEX Statement",null,null,"ON Clause","CREATE TRIGGER Statement",null,"Conditional Clause",null,null,"Conditional Action",null,null,null,null,null,"WHEN Clause","Actions Clause",null,null,"CREATE VIEW Statement",null,null,"CREATE VIRTUAL TABLE Statement",null,null,"Module Arguments",null,null,null,"DROP Statement","DROP Keyword","DROP Type",null,"IF EXISTS Keyword","Unary Operator","Binary Operator",null,"Or","Add","Subtract","Multiply","Divide","Modulo","Shift Left","Shift Right","Logical AND","Logical OR","Less Than","Greater Than","Less Than Or Equal","Greater Than Or Equal","Equal","Not Equal",null,"IS",null,"Database Identifier","Table Identifier",null,"Column Identifier",null,null,null,"Collation Identifier","Savepoint Indentifier","Index Identifier","Trigger Identifier","View Identifier","Pragma Identifier","CTE Identifier",null,"Table Constraint Identifier","Column Constraint Identifier","Datatype Name","TEXT Datatype Name","REAL Datatype Name","DOUBLE Datatype Name","NUMERIC Datatype Name","INTEGER Datatype Name","BLOB Datatype Name",null,null,null,null,null,null,null,"Open Bracket","Close Bracket","Open Parenthesis","Close Parenthesis","Comma","Period","Asterisk","Question Mark","Single Quote","Double Quote","Backtick","Tilde","Plus","Minus","Equal","Ampersand","Pipe","Modulo","Less Than","Greater Than","Exclamation","Semicolon","Colon","Forward Slash","Backslash",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"Line Comment","Block Comment",null,null,null,null,null,"Whitespace",null],A="tracer"in l?l.tracer:new c;if("startRule"in l){if(!(l.startRule in n))throw new Error("Can't start parsing from rule \""+l.startRule+'".');o=n[l.startRule]}if(k=j(o),k!==m&&r===a.length)return k;throw k!==m&&r<a.length&&f({type:"end",description:"end of input"}),h(null,v,e(u,u))}return a(b,Error),c.prototype.trace=function(a){function b(a){function b(a,b){var c,d="";for(c=0;b>c;c++)d+=a;return d}function d(a,c){return a+b(" ",c-a.length)}"object"===("undefined"==typeof console?"undefined":e(console))&&console.log(a.location.start.line+":"+a.location.start.column+"-"+a.location.end.line+":"+a.location.end.column+" "+d(a.type,10)+" "+b("  ",c.indentLevel)+a.rule)}var c=this;switch(a.type){case"rule.enter":b(a),this.indentLevel++;break;case"rule.match":this.indentLevel--,b(a);break;case"rule.fail":this.indentLevel--,b(a);break;default:throw new Error("Invalid event type: "+a.type+".")}},{SyntaxError:b,DefaultTracer:c,parse:d}}();c.default=h.parse,b.exports=c.default},{"./parser-util":2}],4:[function(a,b,c){"use strict";Object.defineProperty(c,"__esModule",{value:!0});var d=a("./parser-util");c.default=function(){function a(){return this instanceof a?(this.events=[],this.indentation=0,this.whitespaceRule=/(^whitespace)|(char$)|(^[oe]$)|(^sym\_)/i,this.statementRule=/Statement$/i,void(this.firstNodeRule=/(Statement|Clause)$/i)):new a}return a.prototype.trace=function(a){var b,c,e=this;switch(a.indentation=this.indentation,a.type){case"rule.enter":this.events.push(a),this.indentation+=1;break;case"rule.match":this.indentation-=1;break;case"rule.fail":b=(0,d.findLastIndex)(this.events,{rule:a.rule}),c=(0,d.findLastIndex)(this.events,function(a){return!e.whitespaceRule.test(a.rule)}),(e.whitespaceRule.test(a.rule)||b===c)&&this.events.splice(b,1),this.indentation-=1}},a.prototype.smartError=function(a){var b,c,e,f,g,h=this,i={indentation:-1},j=!1,k=0,l=this.events.filter(function(a){return null!=a.description&&!h.whitespaceRule.test(a.rule)}).reverse();return e=(0,d.takeWhile)(l,function(a){if(/^(sym\_semi)$/i.test(a.rule)&&(k+=1),k>1)return!1;if(j){if(/^(stmt)$/i.test(a.rule))return j=!0,!0}else a.indentation>i.indentation?i=a:j=!0;return!0}),e.length&&(c=i.location,g=(0,d.findWhere)(e,function(a){return h.firstNodeRule.test(a.description)&&a.description!==i.description&&a.indentation!==i.indentation}),f=null!=g?this.statementRule.test(i.description)&&this.statementRule.test(g.description)?g.description:i.description+" ("+g.description+")":i.description,b="Syntax error found near "+f,(0,d.extend)(a,{message:b,location:c})),a},a}(),b.exports=c.default},{"./parser-util":2}]},{},[1])(1)});